/**
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */import { TopicDTO } from './topicDTO';


export interface RepresentsAServingModel { 
    /**
     * ID of the Serving entry
     */
    id?: number;
    /**
     * Name of the serving
     */
    name?: string;
    /**
     * HOPSFS directory path containing the model (tf) or python script (sklearn)
     */
    artifactPath?: string;
    /**
     * Version of the serving
     */
    modelVersion?: number;
    /**
     * Number of Serving instances available for serving
     */
    readonly availableInstances?: number;
    /**
     * Number of Serving instances to use for serving
     */
    requestedInstances?: number;
    /**
     * Port on which the Serving instance(s) are listening
     */
    readonly nodePort?: number;
    /**
     * Date on which the Serving entry was created
     */
    readonly created?: Date;
    /**
     * Is request batching enabled
     */
    batchingEnabled?: boolean;
    /**
     * Type of serving, sklearn or tfserving
     */
    servingType?: RepresentsAServingModel.ServingTypeEnum;
    /**
     * User whom created the Serving entry
     */
    readonly creator?: string;
    /**
     * Status of the Serving entry
     */
    readonly status?: RepresentsAServingModel.StatusEnum;
    kafkaTopicDTO?: TopicDTO;
}
export namespace RepresentsAServingModel {
    export type ServingTypeEnum = 'TENSORFLOW' | 'SKLEARN';
    export const ServingTypeEnum = {
        TENSORFLOW: 'TENSORFLOW' as ServingTypeEnum,
        SKLEARN: 'SKLEARN' as ServingTypeEnum
    };
    export type StatusEnum = 'RUNNING' | 'STOPPED' | 'STARTING' | 'UPDATING' | 'STOPPING' | 'TRANSFORMING';
    export const StatusEnum = {
        RUNNING: 'RUNNING' as StatusEnum,
        STOPPED: 'STOPPED' as StatusEnum,
        STARTING: 'STARTING' as StatusEnum,
        UPDATING: 'UPDATING' as StatusEnum,
        STOPPING: 'STOPPING' as StatusEnum,
        TRANSFORMING: 'TRANSFORMING' as StatusEnum
    };
}