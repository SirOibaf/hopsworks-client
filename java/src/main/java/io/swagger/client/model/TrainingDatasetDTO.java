/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusterAnalysisDTO;
import io.swagger.client.model.DescriptiveStatsDTO;
import io.swagger.client.model.FeatureCorrelationMatrixDTO;
import io.swagger.client.model.FeatureDTO;
import io.swagger.client.model.FeatureDistributionsDTO;
import io.swagger.client.model.FeaturestoreJobDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * TrainingDatasetDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class TrainingDatasetDTO {

  @SerializedName("featurestoreId")
  private Integer featurestoreId = null;

  @SerializedName("featurestoreName")
  private String featurestoreName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("descriptiveStatistics")
  private DescriptiveStatsDTO descriptiveStatistics = null;

  @SerializedName("featureCorrelationMatrix")
  private FeatureCorrelationMatrixDTO featureCorrelationMatrix = null;

  @SerializedName("featuresHistogram")
  private FeatureDistributionsDTO featuresHistogram = null;

  @SerializedName("clusterAnalysis")
  private ClusterAnalysisDTO clusterAnalysis = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("features")
  private List<FeatureDTO> features = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("jobs")
  private List<FeaturestoreJobDTO> jobs = null;

  @SerializedName("dataFormat")
  private String dataFormat = null;
  /**
   * Gets or Sets trainingDatasetType
   */
  @JsonAdapter(TrainingDatasetTypeEnum.Adapter.class)
  public enum TrainingDatasetTypeEnum {
    HOPSFS_TRAINING_DATASET("HOPSFS_TRAINING_DATASET"),
    EXTERNAL_TRAINING_DATASET("EXTERNAL_TRAINING_DATASET");

    private String value;

    TrainingDatasetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TrainingDatasetTypeEnum fromValue(String text) {
      for (TrainingDatasetTypeEnum b : TrainingDatasetTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TrainingDatasetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TrainingDatasetTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TrainingDatasetTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TrainingDatasetTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("trainingDatasetType")
  private TrainingDatasetTypeEnum trainingDatasetType = null;
  public TrainingDatasetDTO featurestoreId(Integer featurestoreId) {
    this.featurestoreId = featurestoreId;
    return this;
  }

  

  /**
  * Get featurestoreId
  * @return featurestoreId
  **/
  @Schema(description = "")
  public Integer getFeaturestoreId() {
    return featurestoreId;
  }
  public void setFeaturestoreId(Integer featurestoreId) {
    this.featurestoreId = featurestoreId;
  }
  public TrainingDatasetDTO featurestoreName(String featurestoreName) {
    this.featurestoreName = featurestoreName;
    return this;
  }

  

  /**
  * Get featurestoreName
  * @return featurestoreName
  **/
  @Schema(description = "")
  public String getFeaturestoreName() {
    return featurestoreName;
  }
  public void setFeaturestoreName(String featurestoreName) {
    this.featurestoreName = featurestoreName;
  }
  public TrainingDatasetDTO description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public TrainingDatasetDTO created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  

  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }
  public TrainingDatasetDTO creator(String creator) {
    this.creator = creator;
    return this;
  }

  

  /**
  * Get creator
  * @return creator
  **/
  @Schema(description = "")
  public String getCreator() {
    return creator;
  }
  public void setCreator(String creator) {
    this.creator = creator;
  }
  public TrainingDatasetDTO version(Integer version) {
    this.version = version;
    return this;
  }

  

  /**
  * Get version
  * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }
  public void setVersion(Integer version) {
    this.version = version;
  }
  public TrainingDatasetDTO descriptiveStatistics(DescriptiveStatsDTO descriptiveStatistics) {
    this.descriptiveStatistics = descriptiveStatistics;
    return this;
  }

  

  /**
  * Get descriptiveStatistics
  * @return descriptiveStatistics
  **/
  @Schema(description = "")
  public DescriptiveStatsDTO getDescriptiveStatistics() {
    return descriptiveStatistics;
  }
  public void setDescriptiveStatistics(DescriptiveStatsDTO descriptiveStatistics) {
    this.descriptiveStatistics = descriptiveStatistics;
  }
  public TrainingDatasetDTO featureCorrelationMatrix(FeatureCorrelationMatrixDTO featureCorrelationMatrix) {
    this.featureCorrelationMatrix = featureCorrelationMatrix;
    return this;
  }

  

  /**
  * Get featureCorrelationMatrix
  * @return featureCorrelationMatrix
  **/
  @Schema(description = "")
  public FeatureCorrelationMatrixDTO getFeatureCorrelationMatrix() {
    return featureCorrelationMatrix;
  }
  public void setFeatureCorrelationMatrix(FeatureCorrelationMatrixDTO featureCorrelationMatrix) {
    this.featureCorrelationMatrix = featureCorrelationMatrix;
  }
  public TrainingDatasetDTO featuresHistogram(FeatureDistributionsDTO featuresHistogram) {
    this.featuresHistogram = featuresHistogram;
    return this;
  }

  

  /**
  * Get featuresHistogram
  * @return featuresHistogram
  **/
  @Schema(description = "")
  public FeatureDistributionsDTO getFeaturesHistogram() {
    return featuresHistogram;
  }
  public void setFeaturesHistogram(FeatureDistributionsDTO featuresHistogram) {
    this.featuresHistogram = featuresHistogram;
  }
  public TrainingDatasetDTO clusterAnalysis(ClusterAnalysisDTO clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
    return this;
  }

  

  /**
  * Get clusterAnalysis
  * @return clusterAnalysis
  **/
  @Schema(description = "")
  public ClusterAnalysisDTO getClusterAnalysis() {
    return clusterAnalysis;
  }
  public void setClusterAnalysis(ClusterAnalysisDTO clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
  }
  public TrainingDatasetDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public TrainingDatasetDTO id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public TrainingDatasetDTO features(List<FeatureDTO> features) {
    this.features = features;
    return this;
  }

  public TrainingDatasetDTO addFeaturesItem(FeatureDTO featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<FeatureDTO>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
  * Get features
  * @return features
  **/
  @Schema(description = "")
  public List<FeatureDTO> getFeatures() {
    return features;
  }
  public void setFeatures(List<FeatureDTO> features) {
    this.features = features;
  }
  public TrainingDatasetDTO location(String location) {
    this.location = location;
    return this;
  }

  

  /**
  * Get location
  * @return location
  **/
  @Schema(description = "")
  public String getLocation() {
    return location;
  }
  public void setLocation(String location) {
    this.location = location;
  }
  public TrainingDatasetDTO jobs(List<FeaturestoreJobDTO> jobs) {
    this.jobs = jobs;
    return this;
  }

  public TrainingDatasetDTO addJobsItem(FeaturestoreJobDTO jobsItem) {
    if (this.jobs == null) {
      this.jobs = new ArrayList<FeaturestoreJobDTO>();
    }
    this.jobs.add(jobsItem);
    return this;
  }

  /**
  * Get jobs
  * @return jobs
  **/
  @Schema(description = "")
  public List<FeaturestoreJobDTO> getJobs() {
    return jobs;
  }
  public void setJobs(List<FeaturestoreJobDTO> jobs) {
    this.jobs = jobs;
  }
  public TrainingDatasetDTO dataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
    return this;
  }

  

  /**
  * Get dataFormat
  * @return dataFormat
  **/
  @Schema(description = "")
  public String getDataFormat() {
    return dataFormat;
  }
  public void setDataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
  }
  public TrainingDatasetDTO trainingDatasetType(TrainingDatasetTypeEnum trainingDatasetType) {
    this.trainingDatasetType = trainingDatasetType;
    return this;
  }

  

  /**
  * Get trainingDatasetType
  * @return trainingDatasetType
  **/
  @Schema(description = "")
  public TrainingDatasetTypeEnum getTrainingDatasetType() {
    return trainingDatasetType;
  }
  public void setTrainingDatasetType(TrainingDatasetTypeEnum trainingDatasetType) {
    this.trainingDatasetType = trainingDatasetType;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrainingDatasetDTO trainingDatasetDTO = (TrainingDatasetDTO) o;
    return Objects.equals(this.featurestoreId, trainingDatasetDTO.featurestoreId) &&
        Objects.equals(this.featurestoreName, trainingDatasetDTO.featurestoreName) &&
        Objects.equals(this.description, trainingDatasetDTO.description) &&
        Objects.equals(this.created, trainingDatasetDTO.created) &&
        Objects.equals(this.creator, trainingDatasetDTO.creator) &&
        Objects.equals(this.version, trainingDatasetDTO.version) &&
        Objects.equals(this.descriptiveStatistics, trainingDatasetDTO.descriptiveStatistics) &&
        Objects.equals(this.featureCorrelationMatrix, trainingDatasetDTO.featureCorrelationMatrix) &&
        Objects.equals(this.featuresHistogram, trainingDatasetDTO.featuresHistogram) &&
        Objects.equals(this.clusterAnalysis, trainingDatasetDTO.clusterAnalysis) &&
        Objects.equals(this.name, trainingDatasetDTO.name) &&
        Objects.equals(this.id, trainingDatasetDTO.id) &&
        Objects.equals(this.features, trainingDatasetDTO.features) &&
        Objects.equals(this.location, trainingDatasetDTO.location) &&
        Objects.equals(this.jobs, trainingDatasetDTO.jobs) &&
        Objects.equals(this.dataFormat, trainingDatasetDTO.dataFormat) &&
        Objects.equals(this.trainingDatasetType, trainingDatasetDTO.trainingDatasetType);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(featurestoreId, featurestoreName, description, created, creator, version, descriptiveStatistics, featureCorrelationMatrix, featuresHistogram, clusterAnalysis, name, id, features, location, jobs, dataFormat, trainingDatasetType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrainingDatasetDTO {\n");
    
    sb.append("    featurestoreId: ").append(toIndentedString(featurestoreId)).append("\n");
    sb.append("    featurestoreName: ").append(toIndentedString(featurestoreName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    descriptiveStatistics: ").append(toIndentedString(descriptiveStatistics)).append("\n");
    sb.append("    featureCorrelationMatrix: ").append(toIndentedString(featureCorrelationMatrix)).append("\n");
    sb.append("    featuresHistogram: ").append(toIndentedString(featuresHistogram)).append("\n");
    sb.append("    clusterAnalysis: ").append(toIndentedString(clusterAnalysis)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    dataFormat: ").append(toIndentedString(dataFormat)).append("\n");
    sb.append("    trainingDatasetType: ").append(toIndentedString(trainingDatasetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
