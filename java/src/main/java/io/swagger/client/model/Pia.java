/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Pia
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class Pia {

  @SerializedName("id")
  private Long id = null;

  @SerializedName("personalData")
  private String personalData = null;

  @SerializedName("howDataCollected")
  private String howDataCollected = null;

  @SerializedName("specifiedExplicitLegitimate")
  private Integer specifiedExplicitLegitimate = null;

  @SerializedName("consentProcess")
  private String consentProcess = null;

  @SerializedName("consentBasis")
  private String consentBasis = null;

  @SerializedName("dataMinimized")
  private Integer dataMinimized = null;

  @SerializedName("dataUptodate")
  private Integer dataUptodate = null;

  @SerializedName("usersInformedHow")
  private String usersInformedHow = null;

  @SerializedName("userControlsDataCollectionRetention")
  private String userControlsDataCollectionRetention = null;

  @SerializedName("dataEncrypted")
  private Integer dataEncrypted = null;

  @SerializedName("dataAnonymized")
  private Integer dataAnonymized = null;

  @SerializedName("dataPseudonymized")
  private Integer dataPseudonymized = null;

  @SerializedName("dataBackedup")
  private Integer dataBackedup = null;

  @SerializedName("dataSecurityMeasures")
  private String dataSecurityMeasures = null;

  @SerializedName("dataPortabilityMeasure")
  private String dataPortabilityMeasure = null;

  @SerializedName("subjectAccessRights")
  private String subjectAccessRights = null;

  @SerializedName("risks")
  private String risks = null;

  @SerializedName("projectId")
  private Integer projectId = null;
  public Pia id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public Pia personalData(String personalData) {
    this.personalData = personalData;
    return this;
  }

  

  /**
  * Get personalData
  * @return personalData
  **/
  @Schema(required = true, description = "")
  public String getPersonalData() {
    return personalData;
  }
  public void setPersonalData(String personalData) {
    this.personalData = personalData;
  }
  public Pia howDataCollected(String howDataCollected) {
    this.howDataCollected = howDataCollected;
    return this;
  }

  

  /**
  * Get howDataCollected
  * @return howDataCollected
  **/
  @Schema(required = true, description = "")
  public String getHowDataCollected() {
    return howDataCollected;
  }
  public void setHowDataCollected(String howDataCollected) {
    this.howDataCollected = howDataCollected;
  }
  public Pia specifiedExplicitLegitimate(Integer specifiedExplicitLegitimate) {
    this.specifiedExplicitLegitimate = specifiedExplicitLegitimate;
    return this;
  }

  

  /**
  * Get specifiedExplicitLegitimate
  * @return specifiedExplicitLegitimate
  **/
  @Schema(required = true, description = "")
  public Integer getSpecifiedExplicitLegitimate() {
    return specifiedExplicitLegitimate;
  }
  public void setSpecifiedExplicitLegitimate(Integer specifiedExplicitLegitimate) {
    this.specifiedExplicitLegitimate = specifiedExplicitLegitimate;
  }
  public Pia consentProcess(String consentProcess) {
    this.consentProcess = consentProcess;
    return this;
  }

  

  /**
  * Get consentProcess
  * @return consentProcess
  **/
  @Schema(description = "")
  public String getConsentProcess() {
    return consentProcess;
  }
  public void setConsentProcess(String consentProcess) {
    this.consentProcess = consentProcess;
  }
  public Pia consentBasis(String consentBasis) {
    this.consentBasis = consentBasis;
    return this;
  }

  

  /**
  * Get consentBasis
  * @return consentBasis
  **/
  @Schema(description = "")
  public String getConsentBasis() {
    return consentBasis;
  }
  public void setConsentBasis(String consentBasis) {
    this.consentBasis = consentBasis;
  }
  public Pia dataMinimized(Integer dataMinimized) {
    this.dataMinimized = dataMinimized;
    return this;
  }

  

  /**
  * Get dataMinimized
  * @return dataMinimized
  **/
  @Schema(required = true, description = "")
  public Integer getDataMinimized() {
    return dataMinimized;
  }
  public void setDataMinimized(Integer dataMinimized) {
    this.dataMinimized = dataMinimized;
  }
  public Pia dataUptodate(Integer dataUptodate) {
    this.dataUptodate = dataUptodate;
    return this;
  }

  

  /**
  * Get dataUptodate
  * @return dataUptodate
  **/
  @Schema(required = true, description = "")
  public Integer getDataUptodate() {
    return dataUptodate;
  }
  public void setDataUptodate(Integer dataUptodate) {
    this.dataUptodate = dataUptodate;
  }
  public Pia usersInformedHow(String usersInformedHow) {
    this.usersInformedHow = usersInformedHow;
    return this;
  }

  

  /**
  * Get usersInformedHow
  * @return usersInformedHow
  **/
  @Schema(required = true, description = "")
  public String getUsersInformedHow() {
    return usersInformedHow;
  }
  public void setUsersInformedHow(String usersInformedHow) {
    this.usersInformedHow = usersInformedHow;
  }
  public Pia userControlsDataCollectionRetention(String userControlsDataCollectionRetention) {
    this.userControlsDataCollectionRetention = userControlsDataCollectionRetention;
    return this;
  }

  

  /**
  * Get userControlsDataCollectionRetention
  * @return userControlsDataCollectionRetention
  **/
  @Schema(required = true, description = "")
  public String getUserControlsDataCollectionRetention() {
    return userControlsDataCollectionRetention;
  }
  public void setUserControlsDataCollectionRetention(String userControlsDataCollectionRetention) {
    this.userControlsDataCollectionRetention = userControlsDataCollectionRetention;
  }
  public Pia dataEncrypted(Integer dataEncrypted) {
    this.dataEncrypted = dataEncrypted;
    return this;
  }

  

  /**
  * Get dataEncrypted
  * @return dataEncrypted
  **/
  @Schema(required = true, description = "")
  public Integer getDataEncrypted() {
    return dataEncrypted;
  }
  public void setDataEncrypted(Integer dataEncrypted) {
    this.dataEncrypted = dataEncrypted;
  }
  public Pia dataAnonymized(Integer dataAnonymized) {
    this.dataAnonymized = dataAnonymized;
    return this;
  }

  

  /**
  * Get dataAnonymized
  * @return dataAnonymized
  **/
  @Schema(required = true, description = "")
  public Integer getDataAnonymized() {
    return dataAnonymized;
  }
  public void setDataAnonymized(Integer dataAnonymized) {
    this.dataAnonymized = dataAnonymized;
  }
  public Pia dataPseudonymized(Integer dataPseudonymized) {
    this.dataPseudonymized = dataPseudonymized;
    return this;
  }

  

  /**
  * Get dataPseudonymized
  * @return dataPseudonymized
  **/
  @Schema(required = true, description = "")
  public Integer getDataPseudonymized() {
    return dataPseudonymized;
  }
  public void setDataPseudonymized(Integer dataPseudonymized) {
    this.dataPseudonymized = dataPseudonymized;
  }
  public Pia dataBackedup(Integer dataBackedup) {
    this.dataBackedup = dataBackedup;
    return this;
  }

  

  /**
  * Get dataBackedup
  * @return dataBackedup
  **/
  @Schema(required = true, description = "")
  public Integer getDataBackedup() {
    return dataBackedup;
  }
  public void setDataBackedup(Integer dataBackedup) {
    this.dataBackedup = dataBackedup;
  }
  public Pia dataSecurityMeasures(String dataSecurityMeasures) {
    this.dataSecurityMeasures = dataSecurityMeasures;
    return this;
  }

  

  /**
  * Get dataSecurityMeasures
  * @return dataSecurityMeasures
  **/
  @Schema(required = true, description = "")
  public String getDataSecurityMeasures() {
    return dataSecurityMeasures;
  }
  public void setDataSecurityMeasures(String dataSecurityMeasures) {
    this.dataSecurityMeasures = dataSecurityMeasures;
  }
  public Pia dataPortabilityMeasure(String dataPortabilityMeasure) {
    this.dataPortabilityMeasure = dataPortabilityMeasure;
    return this;
  }

  

  /**
  * Get dataPortabilityMeasure
  * @return dataPortabilityMeasure
  **/
  @Schema(required = true, description = "")
  public String getDataPortabilityMeasure() {
    return dataPortabilityMeasure;
  }
  public void setDataPortabilityMeasure(String dataPortabilityMeasure) {
    this.dataPortabilityMeasure = dataPortabilityMeasure;
  }
  public Pia subjectAccessRights(String subjectAccessRights) {
    this.subjectAccessRights = subjectAccessRights;
    return this;
  }

  

  /**
  * Get subjectAccessRights
  * @return subjectAccessRights
  **/
  @Schema(required = true, description = "")
  public String getSubjectAccessRights() {
    return subjectAccessRights;
  }
  public void setSubjectAccessRights(String subjectAccessRights) {
    this.subjectAccessRights = subjectAccessRights;
  }
  public Pia risks(String risks) {
    this.risks = risks;
    return this;
  }

  

  /**
  * Get risks
  * @return risks
  **/
  @Schema(required = true, description = "")
  public String getRisks() {
    return risks;
  }
  public void setRisks(String risks) {
    this.risks = risks;
  }
  public Pia projectId(Integer projectId) {
    this.projectId = projectId;
    return this;
  }

  

  /**
  * Get projectId
  * @return projectId
  **/
  @Schema(description = "")
  public Integer getProjectId() {
    return projectId;
  }
  public void setProjectId(Integer projectId) {
    this.projectId = projectId;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pia pia = (Pia) o;
    return Objects.equals(this.id, pia.id) &&
        Objects.equals(this.personalData, pia.personalData) &&
        Objects.equals(this.howDataCollected, pia.howDataCollected) &&
        Objects.equals(this.specifiedExplicitLegitimate, pia.specifiedExplicitLegitimate) &&
        Objects.equals(this.consentProcess, pia.consentProcess) &&
        Objects.equals(this.consentBasis, pia.consentBasis) &&
        Objects.equals(this.dataMinimized, pia.dataMinimized) &&
        Objects.equals(this.dataUptodate, pia.dataUptodate) &&
        Objects.equals(this.usersInformedHow, pia.usersInformedHow) &&
        Objects.equals(this.userControlsDataCollectionRetention, pia.userControlsDataCollectionRetention) &&
        Objects.equals(this.dataEncrypted, pia.dataEncrypted) &&
        Objects.equals(this.dataAnonymized, pia.dataAnonymized) &&
        Objects.equals(this.dataPseudonymized, pia.dataPseudonymized) &&
        Objects.equals(this.dataBackedup, pia.dataBackedup) &&
        Objects.equals(this.dataSecurityMeasures, pia.dataSecurityMeasures) &&
        Objects.equals(this.dataPortabilityMeasure, pia.dataPortabilityMeasure) &&
        Objects.equals(this.subjectAccessRights, pia.subjectAccessRights) &&
        Objects.equals(this.risks, pia.risks) &&
        Objects.equals(this.projectId, pia.projectId);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, personalData, howDataCollected, specifiedExplicitLegitimate, consentProcess, consentBasis, dataMinimized, dataUptodate, usersInformedHow, userControlsDataCollectionRetention, dataEncrypted, dataAnonymized, dataPseudonymized, dataBackedup, dataSecurityMeasures, dataPortabilityMeasure, subjectAccessRights, risks, projectId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pia {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    personalData: ").append(toIndentedString(personalData)).append("\n");
    sb.append("    howDataCollected: ").append(toIndentedString(howDataCollected)).append("\n");
    sb.append("    specifiedExplicitLegitimate: ").append(toIndentedString(specifiedExplicitLegitimate)).append("\n");
    sb.append("    consentProcess: ").append(toIndentedString(consentProcess)).append("\n");
    sb.append("    consentBasis: ").append(toIndentedString(consentBasis)).append("\n");
    sb.append("    dataMinimized: ").append(toIndentedString(dataMinimized)).append("\n");
    sb.append("    dataUptodate: ").append(toIndentedString(dataUptodate)).append("\n");
    sb.append("    usersInformedHow: ").append(toIndentedString(usersInformedHow)).append("\n");
    sb.append("    userControlsDataCollectionRetention: ").append(toIndentedString(userControlsDataCollectionRetention)).append("\n");
    sb.append("    dataEncrypted: ").append(toIndentedString(dataEncrypted)).append("\n");
    sb.append("    dataAnonymized: ").append(toIndentedString(dataAnonymized)).append("\n");
    sb.append("    dataPseudonymized: ").append(toIndentedString(dataPseudonymized)).append("\n");
    sb.append("    dataBackedup: ").append(toIndentedString(dataBackedup)).append("\n");
    sb.append("    dataSecurityMeasures: ").append(toIndentedString(dataSecurityMeasures)).append("\n");
    sb.append("    dataPortabilityMeasure: ").append(toIndentedString(dataPortabilityMeasure)).append("\n");
    sb.append("    subjectAccessRights: ").append(toIndentedString(subjectAccessRights)).append("\n");
    sb.append("    risks: ").append(toIndentedString(risks)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
