/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApiKeyDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * ApiKeyDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class ApiKeyDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<ApiKeyDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("prefix")
  private String prefix = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("modified")
  private OffsetDateTime modified = null;
  /**
   * Gets or Sets scope
   */
  @JsonAdapter(ScopeEnum.Adapter.class)
  public enum ScopeEnum {
    JOB("JOB"),
    DATASET_VIEW("DATASET_VIEW"),
    DATASET_CREATE("DATASET_CREATE"),
    DATASET_DELETE("DATASET_DELETE"),
    INFERENCE("INFERENCE"),
    FEATURESTORE("FEATURESTORE"),
    PROJECT("PROJECT");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ScopeEnum fromValue(String text) {
      for (ScopeEnum b : ScopeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScopeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScopeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ScopeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("scope")
  private List<ScopeEnum> scope = null;
  public ApiKeyDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public ApiKeyDTO items(List<ApiKeyDTO> items) {
    this.items = items;
    return this;
  }

  public ApiKeyDTO addItemsItem(ApiKeyDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<ApiKeyDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<ApiKeyDTO> getItems() {
    return items;
  }
  public void setItems(List<ApiKeyDTO> items) {
    this.items = items;
  }
  public ApiKeyDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public ApiKeyDTO key(String key) {
    this.key = key;
    return this;
  }

  

  /**
  * Get key
  * @return key
  **/
  @Schema(description = "")
  public String getKey() {
    return key;
  }
  public void setKey(String key) {
    this.key = key;
  }
  public ApiKeyDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ApiKeyDTO prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  

  /**
  * Get prefix
  * @return prefix
  **/
  @Schema(description = "")
  public String getPrefix() {
    return prefix;
  }
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }
  public ApiKeyDTO created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  

  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }
  public ApiKeyDTO modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

  

  /**
  * Get modified
  * @return modified
  **/
  @Schema(description = "")
  public OffsetDateTime getModified() {
    return modified;
  }
  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }
  public ApiKeyDTO scope(List<ScopeEnum> scope) {
    this.scope = scope;
    return this;
  }

  public ApiKeyDTO addScopeItem(ScopeEnum scopeItem) {
    if (this.scope == null) {
      this.scope = new ArrayList<ScopeEnum>();
    }
    this.scope.add(scopeItem);
    return this;
  }

  /**
  * Get scope
  * @return scope
  **/
  @Schema(description = "")
  public List<ScopeEnum> getScope() {
    return scope;
  }
  public void setScope(List<ScopeEnum> scope) {
    this.scope = scope;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiKeyDTO apiKeyDTO = (ApiKeyDTO) o;
    return Objects.equals(this.href, apiKeyDTO.href) &&
        Objects.equals(this.items, apiKeyDTO.items) &&
        Objects.equals(this.count, apiKeyDTO.count) &&
        Objects.equals(this.key, apiKeyDTO.key) &&
        Objects.equals(this.name, apiKeyDTO.name) &&
        Objects.equals(this.prefix, apiKeyDTO.prefix) &&
        Objects.equals(this.created, apiKeyDTO.created) &&
        Objects.equals(this.modified, apiKeyDTO.modified) &&
        Objects.equals(this.scope, apiKeyDTO.scope);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, key, name, prefix, created, modified, scope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiKeyDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
