/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CommandDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CommandDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class CommandDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<CommandDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("op")
  private String op = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("host")
  private String host = null;
  public CommandDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public CommandDTO items(List<CommandDTO> items) {
    this.items = items;
    return this;
  }

  public CommandDTO addItemsItem(CommandDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<CommandDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<CommandDTO> getItems() {
    return items;
  }
  public void setItems(List<CommandDTO> items) {
    this.items = items;
  }
  public CommandDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public CommandDTO op(String op) {
    this.op = op;
    return this;
  }

  

  /**
  * Get op
  * @return op
  **/
  @Schema(description = "")
  public String getOp() {
    return op;
  }
  public void setOp(String op) {
    this.op = op;
  }
  public CommandDTO status(String status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }
  public CommandDTO host(String host) {
    this.host = host;
    return this;
  }

  

  /**
  * Get host
  * @return host
  **/
  @Schema(description = "")
  public String getHost() {
    return host;
  }
  public void setHost(String host) {
    this.host = host;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandDTO commandDTO = (CommandDTO) o;
    return Objects.equals(this.href, commandDTO.href) &&
        Objects.equals(this.items, commandDTO.items) &&
        Objects.equals(this.count, commandDTO.count) &&
        Objects.equals(this.op, commandDTO.op) &&
        Objects.equals(this.status, commandDTO.status) &&
        Objects.equals(this.host, commandDTO.host);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, op, status, host);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    op: ").append(toIndentedString(op)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
