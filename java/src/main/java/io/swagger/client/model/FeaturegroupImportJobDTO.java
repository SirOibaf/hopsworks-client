/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * FeaturegroupImportJobDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class FeaturegroupImportJobDTO {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    S3("S3"),
    REDSHIFT("REDSHIFT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("storageConnector")
  private String storageConnector = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("featuregroup")
  private String featuregroup = null;

  @SerializedName("primaryKey")
  private List<String> primaryKey = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("featurestore")
  private String featurestore = null;

  @SerializedName("featuregroupVersion")
  private Integer featuregroupVersion = null;

  @SerializedName("jobs")
  private String jobs = null;

  @SerializedName("descriptiveStatistics")
  private Boolean descriptiveStatistics = null;

  @SerializedName("featureCorrelation")
  private Boolean featureCorrelation = null;

  @SerializedName("featureHistograms")
  private Boolean featureHistograms = null;

  @SerializedName("clusterAnalysis")
  private Boolean clusterAnalysis = null;

  @SerializedName("statsColumn")
  private List<String> statsColumn = null;

  @SerializedName("numBins")
  private Integer numBins = null;

  @SerializedName("corrMethod")
  private String corrMethod = null;

  @SerializedName("num_clusters")
  private Integer numClusters = null;

  @SerializedName("partitionBy")
  private List<String> partitionBy = null;

  @SerializedName("dataFormat")
  private String dataFormat = null;

  @SerializedName("online")
  private Boolean online = null;

  @SerializedName("onlineTypes")
  private Map<String, String> onlineTypes = null;

  @SerializedName("offline")
  private Boolean offline = null;

  @SerializedName("amCores")
  private Integer amCores = null;

  @SerializedName("amMemory")
  private Integer amMemory = null;

  @SerializedName("executorCores")
  private Integer executorCores = null;

  @SerializedName("executorMemory")
  private Integer executorMemory = null;

  @SerializedName("maxExecutors")
  private Integer maxExecutors = null;
  public FeaturegroupImportJobDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }
  public FeaturegroupImportJobDTO storageConnector(String storageConnector) {
    this.storageConnector = storageConnector;
    return this;
  }

  

  /**
  * Get storageConnector
  * @return storageConnector
  **/
  @Schema(description = "")
  public String getStorageConnector() {
    return storageConnector;
  }
  public void setStorageConnector(String storageConnector) {
    this.storageConnector = storageConnector;
  }
  public FeaturegroupImportJobDTO path(String path) {
    this.path = path;
    return this;
  }

  

  /**
  * Get path
  * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }
  public void setPath(String path) {
    this.path = path;
  }
  public FeaturegroupImportJobDTO featuregroup(String featuregroup) {
    this.featuregroup = featuregroup;
    return this;
  }

  

  /**
  * Get featuregroup
  * @return featuregroup
  **/
  @Schema(description = "")
  public String getFeaturegroup() {
    return featuregroup;
  }
  public void setFeaturegroup(String featuregroup) {
    this.featuregroup = featuregroup;
  }
  public FeaturegroupImportJobDTO primaryKey(List<String> primaryKey) {
    this.primaryKey = primaryKey;
    return this;
  }

  public FeaturegroupImportJobDTO addPrimaryKeyItem(String primaryKeyItem) {
    if (this.primaryKey == null) {
      this.primaryKey = new ArrayList<String>();
    }
    this.primaryKey.add(primaryKeyItem);
    return this;
  }

  /**
  * Get primaryKey
  * @return primaryKey
  **/
  @Schema(description = "")
  public List<String> getPrimaryKey() {
    return primaryKey;
  }
  public void setPrimaryKey(List<String> primaryKey) {
    this.primaryKey = primaryKey;
  }
  public FeaturegroupImportJobDTO description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public FeaturegroupImportJobDTO featurestore(String featurestore) {
    this.featurestore = featurestore;
    return this;
  }

  

  /**
  * Get featurestore
  * @return featurestore
  **/
  @Schema(description = "")
  public String getFeaturestore() {
    return featurestore;
  }
  public void setFeaturestore(String featurestore) {
    this.featurestore = featurestore;
  }
  public FeaturegroupImportJobDTO featuregroupVersion(Integer featuregroupVersion) {
    this.featuregroupVersion = featuregroupVersion;
    return this;
  }

  

  /**
  * Get featuregroupVersion
  * @return featuregroupVersion
  **/
  @Schema(description = "")
  public Integer getFeaturegroupVersion() {
    return featuregroupVersion;
  }
  public void setFeaturegroupVersion(Integer featuregroupVersion) {
    this.featuregroupVersion = featuregroupVersion;
  }
  public FeaturegroupImportJobDTO jobs(String jobs) {
    this.jobs = jobs;
    return this;
  }

  

  /**
  * Get jobs
  * @return jobs
  **/
  @Schema(description = "")
  public String getJobs() {
    return jobs;
  }
  public void setJobs(String jobs) {
    this.jobs = jobs;
  }
  public FeaturegroupImportJobDTO descriptiveStatistics(Boolean descriptiveStatistics) {
    this.descriptiveStatistics = descriptiveStatistics;
    return this;
  }

  

  /**
  * Get descriptiveStatistics
  * @return descriptiveStatistics
  **/
  @Schema(description = "")
  public Boolean isDescriptiveStatistics() {
    return descriptiveStatistics;
  }
  public void setDescriptiveStatistics(Boolean descriptiveStatistics) {
    this.descriptiveStatistics = descriptiveStatistics;
  }
  public FeaturegroupImportJobDTO featureCorrelation(Boolean featureCorrelation) {
    this.featureCorrelation = featureCorrelation;
    return this;
  }

  

  /**
  * Get featureCorrelation
  * @return featureCorrelation
  **/
  @Schema(description = "")
  public Boolean isFeatureCorrelation() {
    return featureCorrelation;
  }
  public void setFeatureCorrelation(Boolean featureCorrelation) {
    this.featureCorrelation = featureCorrelation;
  }
  public FeaturegroupImportJobDTO featureHistograms(Boolean featureHistograms) {
    this.featureHistograms = featureHistograms;
    return this;
  }

  

  /**
  * Get featureHistograms
  * @return featureHistograms
  **/
  @Schema(description = "")
  public Boolean isFeatureHistograms() {
    return featureHistograms;
  }
  public void setFeatureHistograms(Boolean featureHistograms) {
    this.featureHistograms = featureHistograms;
  }
  public FeaturegroupImportJobDTO clusterAnalysis(Boolean clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
    return this;
  }

  

  /**
  * Get clusterAnalysis
  * @return clusterAnalysis
  **/
  @Schema(description = "")
  public Boolean isClusterAnalysis() {
    return clusterAnalysis;
  }
  public void setClusterAnalysis(Boolean clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
  }
  public FeaturegroupImportJobDTO statsColumn(List<String> statsColumn) {
    this.statsColumn = statsColumn;
    return this;
  }

  public FeaturegroupImportJobDTO addStatsColumnItem(String statsColumnItem) {
    if (this.statsColumn == null) {
      this.statsColumn = new ArrayList<String>();
    }
    this.statsColumn.add(statsColumnItem);
    return this;
  }

  /**
  * Get statsColumn
  * @return statsColumn
  **/
  @Schema(description = "")
  public List<String> getStatsColumn() {
    return statsColumn;
  }
  public void setStatsColumn(List<String> statsColumn) {
    this.statsColumn = statsColumn;
  }
  public FeaturegroupImportJobDTO numBins(Integer numBins) {
    this.numBins = numBins;
    return this;
  }

  

  /**
  * Get numBins
  * @return numBins
  **/
  @Schema(description = "")
  public Integer getNumBins() {
    return numBins;
  }
  public void setNumBins(Integer numBins) {
    this.numBins = numBins;
  }
  public FeaturegroupImportJobDTO corrMethod(String corrMethod) {
    this.corrMethod = corrMethod;
    return this;
  }

  

  /**
  * Get corrMethod
  * @return corrMethod
  **/
  @Schema(description = "")
  public String getCorrMethod() {
    return corrMethod;
  }
  public void setCorrMethod(String corrMethod) {
    this.corrMethod = corrMethod;
  }
  public FeaturegroupImportJobDTO numClusters(Integer numClusters) {
    this.numClusters = numClusters;
    return this;
  }

  

  /**
  * Get numClusters
  * @return numClusters
  **/
  @Schema(description = "")
  public Integer getNumClusters() {
    return numClusters;
  }
  public void setNumClusters(Integer numClusters) {
    this.numClusters = numClusters;
  }
  public FeaturegroupImportJobDTO partitionBy(List<String> partitionBy) {
    this.partitionBy = partitionBy;
    return this;
  }

  public FeaturegroupImportJobDTO addPartitionByItem(String partitionByItem) {
    if (this.partitionBy == null) {
      this.partitionBy = new ArrayList<String>();
    }
    this.partitionBy.add(partitionByItem);
    return this;
  }

  /**
  * Get partitionBy
  * @return partitionBy
  **/
  @Schema(description = "")
  public List<String> getPartitionBy() {
    return partitionBy;
  }
  public void setPartitionBy(List<String> partitionBy) {
    this.partitionBy = partitionBy;
  }
  public FeaturegroupImportJobDTO dataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
    return this;
  }

  

  /**
  * Get dataFormat
  * @return dataFormat
  **/
  @Schema(description = "")
  public String getDataFormat() {
    return dataFormat;
  }
  public void setDataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
  }
  public FeaturegroupImportJobDTO online(Boolean online) {
    this.online = online;
    return this;
  }

  

  /**
  * Get online
  * @return online
  **/
  @Schema(description = "")
  public Boolean isOnline() {
    return online;
  }
  public void setOnline(Boolean online) {
    this.online = online;
  }
  public FeaturegroupImportJobDTO onlineTypes(Map<String, String> onlineTypes) {
    this.onlineTypes = onlineTypes;
    return this;
  }

  
  public FeaturegroupImportJobDTO putOnlineTypesItem(String key, String onlineTypesItem) {
    if (this.onlineTypes == null) {
      this.onlineTypes = new HashMap<String, String>();
    }
    this.onlineTypes.put(key, onlineTypesItem);
    return this;
  }
  /**
  * Get onlineTypes
  * @return onlineTypes
  **/
  @Schema(description = "")
  public Map<String, String> getOnlineTypes() {
    return onlineTypes;
  }
  public void setOnlineTypes(Map<String, String> onlineTypes) {
    this.onlineTypes = onlineTypes;
  }
  public FeaturegroupImportJobDTO offline(Boolean offline) {
    this.offline = offline;
    return this;
  }

  

  /**
  * Get offline
  * @return offline
  **/
  @Schema(description = "")
  public Boolean isOffline() {
    return offline;
  }
  public void setOffline(Boolean offline) {
    this.offline = offline;
  }
  public FeaturegroupImportJobDTO amCores(Integer amCores) {
    this.amCores = amCores;
    return this;
  }

  

  /**
  * Get amCores
  * @return amCores
  **/
  @Schema(description = "")
  public Integer getAmCores() {
    return amCores;
  }
  public void setAmCores(Integer amCores) {
    this.amCores = amCores;
  }
  public FeaturegroupImportJobDTO amMemory(Integer amMemory) {
    this.amMemory = amMemory;
    return this;
  }

  

  /**
  * Get amMemory
  * @return amMemory
  **/
  @Schema(description = "")
  public Integer getAmMemory() {
    return amMemory;
  }
  public void setAmMemory(Integer amMemory) {
    this.amMemory = amMemory;
  }
  public FeaturegroupImportJobDTO executorCores(Integer executorCores) {
    this.executorCores = executorCores;
    return this;
  }

  

  /**
  * Get executorCores
  * @return executorCores
  **/
  @Schema(description = "")
  public Integer getExecutorCores() {
    return executorCores;
  }
  public void setExecutorCores(Integer executorCores) {
    this.executorCores = executorCores;
  }
  public FeaturegroupImportJobDTO executorMemory(Integer executorMemory) {
    this.executorMemory = executorMemory;
    return this;
  }

  

  /**
  * Get executorMemory
  * @return executorMemory
  **/
  @Schema(description = "")
  public Integer getExecutorMemory() {
    return executorMemory;
  }
  public void setExecutorMemory(Integer executorMemory) {
    this.executorMemory = executorMemory;
  }
  public FeaturegroupImportJobDTO maxExecutors(Integer maxExecutors) {
    this.maxExecutors = maxExecutors;
    return this;
  }

  

  /**
  * Get maxExecutors
  * @return maxExecutors
  **/
  @Schema(description = "")
  public Integer getMaxExecutors() {
    return maxExecutors;
  }
  public void setMaxExecutors(Integer maxExecutors) {
    this.maxExecutors = maxExecutors;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeaturegroupImportJobDTO featuregroupImportJobDTO = (FeaturegroupImportJobDTO) o;
    return Objects.equals(this.type, featuregroupImportJobDTO.type) &&
        Objects.equals(this.storageConnector, featuregroupImportJobDTO.storageConnector) &&
        Objects.equals(this.path, featuregroupImportJobDTO.path) &&
        Objects.equals(this.featuregroup, featuregroupImportJobDTO.featuregroup) &&
        Objects.equals(this.primaryKey, featuregroupImportJobDTO.primaryKey) &&
        Objects.equals(this.description, featuregroupImportJobDTO.description) &&
        Objects.equals(this.featurestore, featuregroupImportJobDTO.featurestore) &&
        Objects.equals(this.featuregroupVersion, featuregroupImportJobDTO.featuregroupVersion) &&
        Objects.equals(this.jobs, featuregroupImportJobDTO.jobs) &&
        Objects.equals(this.descriptiveStatistics, featuregroupImportJobDTO.descriptiveStatistics) &&
        Objects.equals(this.featureCorrelation, featuregroupImportJobDTO.featureCorrelation) &&
        Objects.equals(this.featureHistograms, featuregroupImportJobDTO.featureHistograms) &&
        Objects.equals(this.clusterAnalysis, featuregroupImportJobDTO.clusterAnalysis) &&
        Objects.equals(this.statsColumn, featuregroupImportJobDTO.statsColumn) &&
        Objects.equals(this.numBins, featuregroupImportJobDTO.numBins) &&
        Objects.equals(this.corrMethod, featuregroupImportJobDTO.corrMethod) &&
        Objects.equals(this.numClusters, featuregroupImportJobDTO.numClusters) &&
        Objects.equals(this.partitionBy, featuregroupImportJobDTO.partitionBy) &&
        Objects.equals(this.dataFormat, featuregroupImportJobDTO.dataFormat) &&
        Objects.equals(this.online, featuregroupImportJobDTO.online) &&
        Objects.equals(this.onlineTypes, featuregroupImportJobDTO.onlineTypes) &&
        Objects.equals(this.offline, featuregroupImportJobDTO.offline) &&
        Objects.equals(this.amCores, featuregroupImportJobDTO.amCores) &&
        Objects.equals(this.amMemory, featuregroupImportJobDTO.amMemory) &&
        Objects.equals(this.executorCores, featuregroupImportJobDTO.executorCores) &&
        Objects.equals(this.executorMemory, featuregroupImportJobDTO.executorMemory) &&
        Objects.equals(this.maxExecutors, featuregroupImportJobDTO.maxExecutors);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(type, storageConnector, path, featuregroup, primaryKey, description, featurestore, featuregroupVersion, jobs, descriptiveStatistics, featureCorrelation, featureHistograms, clusterAnalysis, statsColumn, numBins, corrMethod, numClusters, partitionBy, dataFormat, online, onlineTypes, offline, amCores, amMemory, executorCores, executorMemory, maxExecutors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeaturegroupImportJobDTO {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    storageConnector: ").append(toIndentedString(storageConnector)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    featuregroup: ").append(toIndentedString(featuregroup)).append("\n");
    sb.append("    primaryKey: ").append(toIndentedString(primaryKey)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    featurestore: ").append(toIndentedString(featurestore)).append("\n");
    sb.append("    featuregroupVersion: ").append(toIndentedString(featuregroupVersion)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    descriptiveStatistics: ").append(toIndentedString(descriptiveStatistics)).append("\n");
    sb.append("    featureCorrelation: ").append(toIndentedString(featureCorrelation)).append("\n");
    sb.append("    featureHistograms: ").append(toIndentedString(featureHistograms)).append("\n");
    sb.append("    clusterAnalysis: ").append(toIndentedString(clusterAnalysis)).append("\n");
    sb.append("    statsColumn: ").append(toIndentedString(statsColumn)).append("\n");
    sb.append("    numBins: ").append(toIndentedString(numBins)).append("\n");
    sb.append("    corrMethod: ").append(toIndentedString(corrMethod)).append("\n");
    sb.append("    numClusters: ").append(toIndentedString(numClusters)).append("\n");
    sb.append("    partitionBy: ").append(toIndentedString(partitionBy)).append("\n");
    sb.append("    dataFormat: ").append(toIndentedString(dataFormat)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("    onlineTypes: ").append(toIndentedString(onlineTypes)).append("\n");
    sb.append("    offline: ").append(toIndentedString(offline)).append("\n");
    sb.append("    amCores: ").append(toIndentedString(amCores)).append("\n");
    sb.append("    amMemory: ").append(toIndentedString(amMemory)).append("\n");
    sb.append("    executorCores: ").append(toIndentedString(executorCores)).append("\n");
    sb.append("    executorMemory: ").append(toIndentedString(executorMemory)).append("\n");
    sb.append("    maxExecutors: ").append(toIndentedString(maxExecutors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
