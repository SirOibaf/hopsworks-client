/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.BbcGroup;
import io.swagger.client.model.JupyterSettings;
import io.swagger.client.model.Organization;
import io.swagger.client.model.TensorBoard;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Users
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class Users {

  @SerializedName("uid")
  private Integer uid = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("fname")
  private String fname = null;

  @SerializedName("lname")
  private String lname = null;

  @SerializedName("activated")
  private OffsetDateTime activated = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("orcid")
  private String orcid = null;

  @SerializedName("falseLogin")
  private Integer falseLogin = null;
  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NEW_MOBILE_ACCOUNT("NEW_MOBILE_ACCOUNT"),
    VERIFIED_ACCOUNT("VERIFIED_ACCOUNT"),
    ACTIVATED_ACCOUNT("ACTIVATED_ACCOUNT"),
    DEACTIVATED_ACCOUNT("DEACTIVATED_ACCOUNT"),
    BLOCKED_ACCOUNT("BLOCKED_ACCOUNT"),
    LOST_MOBILE("LOST_MOBILE"),
    SPAM_ACCOUNT("SPAM_ACCOUNT"),
    TEMP_PASSWORD("TEMP_PASSWORD");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("isonline")
  private Integer isonline = null;

  @SerializedName("secret")
  private String secret = null;

  @SerializedName("validationKey")
  private String validationKey = null;

  @SerializedName("validationKeyUpdated")
  private OffsetDateTime validationKeyUpdated = null;
  /**
   * Gets or Sets validationKeyType
   */
  @JsonAdapter(ValidationKeyTypeEnum.Adapter.class)
  public enum ValidationKeyTypeEnum {
    EMAIL("EMAIL"),
    PASSWORD("PASSWORD"),
    PASSWORD_RESET("PASSWORD_RESET"),
    QR_RESET("QR_RESET");

    private String value;

    ValidationKeyTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ValidationKeyTypeEnum fromValue(String text) {
      for (ValidationKeyTypeEnum b : ValidationKeyTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ValidationKeyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidationKeyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidationKeyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ValidationKeyTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("validationKeyType")
  private ValidationKeyTypeEnum validationKeyType = null;
  /**
   * Gets or Sets securityQuestion
   */
  @JsonAdapter(SecurityQuestionEnum.Adapter.class)
  public enum SecurityQuestionEnum {
    MAIDEN_NAME("MAIDEN_NAME"),
    PET("PET"),
    LOVE("LOVE"),
    NICK_NAME("NICK_NAME"),
    CHILDHOOD_FRIEND("CHILDHOOD_FRIEND"),
    STREET("STREET"),
    SIBLING_MAIDEN_NAME("SIBLING_MAIDEN_NAME"),
    SCHOOL("SCHOOL"),
    COUSIN_MAIDEN_NAME("COUSIN_MAIDEN_NAME"),
    STUFFED_ANIMAL("STUFFED_ANIMAL"),
    SIBLING_LIVE("SIBLING_LIVE"),
    FIRST_JOB_TOWN("FIRST_JOB_TOWN");

    private String value;

    SecurityQuestionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SecurityQuestionEnum fromValue(String text) {
      for (SecurityQuestionEnum b : SecurityQuestionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SecurityQuestionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SecurityQuestionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SecurityQuestionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SecurityQuestionEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("securityQuestion")
  private SecurityQuestionEnum securityQuestion = null;

  @SerializedName("securityAnswer")
  private String securityAnswer = null;
  /**
   * Gets or Sets mode
   */
  @JsonAdapter(ModeEnum.Adapter.class)
  public enum ModeEnum {
    M_ACCOUNT_TYPE("M_ACCOUNT_TYPE"),
    REMOTE_ACCOUNT_TYPE("REMOTE_ACCOUNT_TYPE");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ModeEnum fromValue(String text) {
      for (ModeEnum b : ModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ModeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ModeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("mode")
  private ModeEnum mode = null;

  @SerializedName("passwordChanged")
  private OffsetDateTime passwordChanged = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("mobile")
  private String mobile = null;

  @SerializedName("maxNumProjects")
  private Integer maxNumProjects = null;

  @SerializedName("numCreatedProjects")
  private Integer numCreatedProjects = null;

  @SerializedName("numActiveProjects")
  private Integer numActiveProjects = null;

  @SerializedName("twoFactor")
  private Boolean twoFactor = null;

  @SerializedName("salt")
  private String salt = null;

  @SerializedName("toursState")
  private Integer toursState = null;

  @SerializedName("bbcGroupCollection")
  private List<BbcGroup> bbcGroupCollection = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("organization")
  private Organization organization = null;

  @SerializedName("jupyterSettingsCollection")
  private List<JupyterSettings> jupyterSettingsCollection = null;

  @SerializedName("tensorBoardCollection")
  private List<TensorBoard> tensorBoardCollection = null;

  @SerializedName("groupName")
  private String groupName = null;

  @SerializedName("groupNames")
  private List<BbcGroup> groupNames = null;

  @SerializedName("statusName")
  private String statusName = null;
  public Users uid(Integer uid) {
    this.uid = uid;
    return this;
  }

  

  /**
  * Get uid
  * @return uid
  **/
  @Schema(description = "")
  public Integer getUid() {
    return uid;
  }
  public void setUid(Integer uid) {
    this.uid = uid;
  }
  public Users username(String username) {
    this.username = username;
    return this;
  }

  

  /**
  * Get username
  * @return username
  **/
  @Schema(required = true, description = "")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }
  public Users password(String password) {
    this.password = password;
    return this;
  }

  

  /**
  * Get password
  * @return password
  **/
  @Schema(required = true, description = "")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }
  public Users email(String email) {
    this.email = email;
    return this;
  }

  

  /**
  * Get email
  * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }
  public Users fname(String fname) {
    this.fname = fname;
    return this;
  }

  

  /**
  * Get fname
  * @return fname
  **/
  @Schema(description = "")
  public String getFname() {
    return fname;
  }
  public void setFname(String fname) {
    this.fname = fname;
  }
  public Users lname(String lname) {
    this.lname = lname;
    return this;
  }

  

  /**
  * Get lname
  * @return lname
  **/
  @Schema(description = "")
  public String getLname() {
    return lname;
  }
  public void setLname(String lname) {
    this.lname = lname;
  }
  public Users activated(OffsetDateTime activated) {
    this.activated = activated;
    return this;
  }

  

  /**
  * Get activated
  * @return activated
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getActivated() {
    return activated;
  }
  public void setActivated(OffsetDateTime activated) {
    this.activated = activated;
  }
  public Users title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * Get title
  * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public Users orcid(String orcid) {
    this.orcid = orcid;
    return this;
  }

  

  /**
  * Get orcid
  * @return orcid
  **/
  @Schema(description = "")
  public String getOrcid() {
    return orcid;
  }
  public void setOrcid(String orcid) {
    this.orcid = orcid;
  }
  public Users falseLogin(Integer falseLogin) {
    this.falseLogin = falseLogin;
    return this;
  }

  

  /**
  * Get falseLogin
  * @return falseLogin
  **/
  @Schema(required = true, description = "")
  public Integer getFalseLogin() {
    return falseLogin;
  }
  public void setFalseLogin(Integer falseLogin) {
    this.falseLogin = falseLogin;
  }
  public Users status(StatusEnum status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(required = true, description = "")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }
  public Users isonline(Integer isonline) {
    this.isonline = isonline;
    return this;
  }

  

  /**
  * Get isonline
  * @return isonline
  **/
  @Schema(required = true, description = "")
  public Integer getIsonline() {
    return isonline;
  }
  public void setIsonline(Integer isonline) {
    this.isonline = isonline;
  }
  public Users secret(String secret) {
    this.secret = secret;
    return this;
  }

  

  /**
  * Get secret
  * @return secret
  **/
  @Schema(description = "")
  public String getSecret() {
    return secret;
  }
  public void setSecret(String secret) {
    this.secret = secret;
  }
  public Users validationKey(String validationKey) {
    this.validationKey = validationKey;
    return this;
  }

  

  /**
  * Get validationKey
  * @return validationKey
  **/
  @Schema(description = "")
  public String getValidationKey() {
    return validationKey;
  }
  public void setValidationKey(String validationKey) {
    this.validationKey = validationKey;
  }
  public Users validationKeyUpdated(OffsetDateTime validationKeyUpdated) {
    this.validationKeyUpdated = validationKeyUpdated;
    return this;
  }

  

  /**
  * Get validationKeyUpdated
  * @return validationKeyUpdated
  **/
  @Schema(description = "")
  public OffsetDateTime getValidationKeyUpdated() {
    return validationKeyUpdated;
  }
  public void setValidationKeyUpdated(OffsetDateTime validationKeyUpdated) {
    this.validationKeyUpdated = validationKeyUpdated;
  }
  public Users validationKeyType(ValidationKeyTypeEnum validationKeyType) {
    this.validationKeyType = validationKeyType;
    return this;
  }

  

  /**
  * Get validationKeyType
  * @return validationKeyType
  **/
  @Schema(description = "")
  public ValidationKeyTypeEnum getValidationKeyType() {
    return validationKeyType;
  }
  public void setValidationKeyType(ValidationKeyTypeEnum validationKeyType) {
    this.validationKeyType = validationKeyType;
  }
  public Users securityQuestion(SecurityQuestionEnum securityQuestion) {
    this.securityQuestion = securityQuestion;
    return this;
  }

  

  /**
  * Get securityQuestion
  * @return securityQuestion
  **/
  @Schema(description = "")
  public SecurityQuestionEnum getSecurityQuestion() {
    return securityQuestion;
  }
  public void setSecurityQuestion(SecurityQuestionEnum securityQuestion) {
    this.securityQuestion = securityQuestion;
  }
  public Users securityAnswer(String securityAnswer) {
    this.securityAnswer = securityAnswer;
    return this;
  }

  

  /**
  * Get securityAnswer
  * @return securityAnswer
  **/
  @Schema(description = "")
  public String getSecurityAnswer() {
    return securityAnswer;
  }
  public void setSecurityAnswer(String securityAnswer) {
    this.securityAnswer = securityAnswer;
  }
  public Users mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

  

  /**
  * Get mode
  * @return mode
  **/
  @Schema(required = true, description = "")
  public ModeEnum getMode() {
    return mode;
  }
  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }
  public Users passwordChanged(OffsetDateTime passwordChanged) {
    this.passwordChanged = passwordChanged;
    return this;
  }

  

  /**
  * Get passwordChanged
  * @return passwordChanged
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getPasswordChanged() {
    return passwordChanged;
  }
  public void setPasswordChanged(OffsetDateTime passwordChanged) {
    this.passwordChanged = passwordChanged;
  }
  public Users notes(String notes) {
    this.notes = notes;
    return this;
  }

  

  /**
  * Get notes
  * @return notes
  **/
  @Schema(description = "")
  public String getNotes() {
    return notes;
  }
  public void setNotes(String notes) {
    this.notes = notes;
  }
  public Users mobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

  

  /**
  * Get mobile
  * @return mobile
  **/
  @Schema(description = "")
  public String getMobile() {
    return mobile;
  }
  public void setMobile(String mobile) {
    this.mobile = mobile;
  }
  public Users maxNumProjects(Integer maxNumProjects) {
    this.maxNumProjects = maxNumProjects;
    return this;
  }

  

  /**
  * Get maxNumProjects
  * @return maxNumProjects
  **/
  @Schema(description = "")
  public Integer getMaxNumProjects() {
    return maxNumProjects;
  }
  public void setMaxNumProjects(Integer maxNumProjects) {
    this.maxNumProjects = maxNumProjects;
  }
  public Users numCreatedProjects(Integer numCreatedProjects) {
    this.numCreatedProjects = numCreatedProjects;
    return this;
  }

  

  /**
  * Get numCreatedProjects
  * @return numCreatedProjects
  **/
  @Schema(required = true, description = "")
  public Integer getNumCreatedProjects() {
    return numCreatedProjects;
  }
  public void setNumCreatedProjects(Integer numCreatedProjects) {
    this.numCreatedProjects = numCreatedProjects;
  }
  public Users numActiveProjects(Integer numActiveProjects) {
    this.numActiveProjects = numActiveProjects;
    return this;
  }

  

  /**
  * Get numActiveProjects
  * @return numActiveProjects
  **/
  @Schema(required = true, description = "")
  public Integer getNumActiveProjects() {
    return numActiveProjects;
  }
  public void setNumActiveProjects(Integer numActiveProjects) {
    this.numActiveProjects = numActiveProjects;
  }
  public Users twoFactor(Boolean twoFactor) {
    this.twoFactor = twoFactor;
    return this;
  }

  

  /**
  * Get twoFactor
  * @return twoFactor
  **/
  @Schema(required = true, description = "")
  public Boolean isTwoFactor() {
    return twoFactor;
  }
  public void setTwoFactor(Boolean twoFactor) {
    this.twoFactor = twoFactor;
  }
  public Users salt(String salt) {
    this.salt = salt;
    return this;
  }

  

  /**
  * Get salt
  * @return salt
  **/
  @Schema(required = true, description = "")
  public String getSalt() {
    return salt;
  }
  public void setSalt(String salt) {
    this.salt = salt;
  }
  public Users toursState(Integer toursState) {
    this.toursState = toursState;
    return this;
  }

  

  /**
  * Get toursState
  * @return toursState
  **/
  @Schema(required = true, description = "")
  public Integer getToursState() {
    return toursState;
  }
  public void setToursState(Integer toursState) {
    this.toursState = toursState;
  }
  public Users bbcGroupCollection(List<BbcGroup> bbcGroupCollection) {
    this.bbcGroupCollection = bbcGroupCollection;
    return this;
  }

  public Users addBbcGroupCollectionItem(BbcGroup bbcGroupCollectionItem) {
    if (this.bbcGroupCollection == null) {
      this.bbcGroupCollection = new ArrayList<BbcGroup>();
    }
    this.bbcGroupCollection.add(bbcGroupCollectionItem);
    return this;
  }

  /**
  * Get bbcGroupCollection
  * @return bbcGroupCollection
  **/
  @Schema(description = "")
  public List<BbcGroup> getBbcGroupCollection() {
    return bbcGroupCollection;
  }
  public void setBbcGroupCollection(List<BbcGroup> bbcGroupCollection) {
    this.bbcGroupCollection = bbcGroupCollection;
  }
  public Users address(Address address) {
    this.address = address;
    return this;
  }

  

  /**
  * Get address
  * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }
  public void setAddress(Address address) {
    this.address = address;
  }
  public Users organization(Organization organization) {
    this.organization = organization;
    return this;
  }

  

  /**
  * Get organization
  * @return organization
  **/
  @Schema(description = "")
  public Organization getOrganization() {
    return organization;
  }
  public void setOrganization(Organization organization) {
    this.organization = organization;
  }
  public Users jupyterSettingsCollection(List<JupyterSettings> jupyterSettingsCollection) {
    this.jupyterSettingsCollection = jupyterSettingsCollection;
    return this;
  }

  public Users addJupyterSettingsCollectionItem(JupyterSettings jupyterSettingsCollectionItem) {
    if (this.jupyterSettingsCollection == null) {
      this.jupyterSettingsCollection = new ArrayList<JupyterSettings>();
    }
    this.jupyterSettingsCollection.add(jupyterSettingsCollectionItem);
    return this;
  }

  /**
  * Get jupyterSettingsCollection
  * @return jupyterSettingsCollection
  **/
  @Schema(description = "")
  public List<JupyterSettings> getJupyterSettingsCollection() {
    return jupyterSettingsCollection;
  }
  public void setJupyterSettingsCollection(List<JupyterSettings> jupyterSettingsCollection) {
    this.jupyterSettingsCollection = jupyterSettingsCollection;
  }
  public Users tensorBoardCollection(List<TensorBoard> tensorBoardCollection) {
    this.tensorBoardCollection = tensorBoardCollection;
    return this;
  }

  public Users addTensorBoardCollectionItem(TensorBoard tensorBoardCollectionItem) {
    if (this.tensorBoardCollection == null) {
      this.tensorBoardCollection = new ArrayList<TensorBoard>();
    }
    this.tensorBoardCollection.add(tensorBoardCollectionItem);
    return this;
  }

  /**
  * Get tensorBoardCollection
  * @return tensorBoardCollection
  **/
  @Schema(description = "")
  public List<TensorBoard> getTensorBoardCollection() {
    return tensorBoardCollection;
  }
  public void setTensorBoardCollection(List<TensorBoard> tensorBoardCollection) {
    this.tensorBoardCollection = tensorBoardCollection;
  }
  public Users groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

  

  /**
  * Get groupName
  * @return groupName
  **/
  @Schema(description = "")
  public String getGroupName() {
    return groupName;
  }
  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }
  public Users groupNames(List<BbcGroup> groupNames) {
    this.groupNames = groupNames;
    return this;
  }

  public Users addGroupNamesItem(BbcGroup groupNamesItem) {
    if (this.groupNames == null) {
      this.groupNames = new ArrayList<BbcGroup>();
    }
    this.groupNames.add(groupNamesItem);
    return this;
  }

  /**
  * Get groupNames
  * @return groupNames
  **/
  @Schema(description = "")
  public List<BbcGroup> getGroupNames() {
    return groupNames;
  }
  public void setGroupNames(List<BbcGroup> groupNames) {
    this.groupNames = groupNames;
  }
  public Users statusName(String statusName) {
    this.statusName = statusName;
    return this;
  }

  

  /**
  * Get statusName
  * @return statusName
  **/
  @Schema(description = "")
  public String getStatusName() {
    return statusName;
  }
  public void setStatusName(String statusName) {
    this.statusName = statusName;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Users users = (Users) o;
    return Objects.equals(this.uid, users.uid) &&
        Objects.equals(this.username, users.username) &&
        Objects.equals(this.password, users.password) &&
        Objects.equals(this.email, users.email) &&
        Objects.equals(this.fname, users.fname) &&
        Objects.equals(this.lname, users.lname) &&
        Objects.equals(this.activated, users.activated) &&
        Objects.equals(this.title, users.title) &&
        Objects.equals(this.orcid, users.orcid) &&
        Objects.equals(this.falseLogin, users.falseLogin) &&
        Objects.equals(this.status, users.status) &&
        Objects.equals(this.isonline, users.isonline) &&
        Objects.equals(this.secret, users.secret) &&
        Objects.equals(this.validationKey, users.validationKey) &&
        Objects.equals(this.validationKeyUpdated, users.validationKeyUpdated) &&
        Objects.equals(this.validationKeyType, users.validationKeyType) &&
        Objects.equals(this.securityQuestion, users.securityQuestion) &&
        Objects.equals(this.securityAnswer, users.securityAnswer) &&
        Objects.equals(this.mode, users.mode) &&
        Objects.equals(this.passwordChanged, users.passwordChanged) &&
        Objects.equals(this.notes, users.notes) &&
        Objects.equals(this.mobile, users.mobile) &&
        Objects.equals(this.maxNumProjects, users.maxNumProjects) &&
        Objects.equals(this.numCreatedProjects, users.numCreatedProjects) &&
        Objects.equals(this.numActiveProjects, users.numActiveProjects) &&
        Objects.equals(this.twoFactor, users.twoFactor) &&
        Objects.equals(this.salt, users.salt) &&
        Objects.equals(this.toursState, users.toursState) &&
        Objects.equals(this.bbcGroupCollection, users.bbcGroupCollection) &&
        Objects.equals(this.address, users.address) &&
        Objects.equals(this.organization, users.organization) &&
        Objects.equals(this.jupyterSettingsCollection, users.jupyterSettingsCollection) &&
        Objects.equals(this.tensorBoardCollection, users.tensorBoardCollection) &&
        Objects.equals(this.groupName, users.groupName) &&
        Objects.equals(this.groupNames, users.groupNames) &&
        Objects.equals(this.statusName, users.statusName);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(uid, username, password, email, fname, lname, activated, title, orcid, falseLogin, status, isonline, secret, validationKey, validationKeyUpdated, validationKeyType, securityQuestion, securityAnswer, mode, passwordChanged, notes, mobile, maxNumProjects, numCreatedProjects, numActiveProjects, twoFactor, salt, toursState, bbcGroupCollection, address, organization, jupyterSettingsCollection, tensorBoardCollection, groupName, groupNames, statusName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Users {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fname: ").append(toIndentedString(fname)).append("\n");
    sb.append("    lname: ").append(toIndentedString(lname)).append("\n");
    sb.append("    activated: ").append(toIndentedString(activated)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    orcid: ").append(toIndentedString(orcid)).append("\n");
    sb.append("    falseLogin: ").append(toIndentedString(falseLogin)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isonline: ").append(toIndentedString(isonline)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    validationKey: ").append(toIndentedString(validationKey)).append("\n");
    sb.append("    validationKeyUpdated: ").append(toIndentedString(validationKeyUpdated)).append("\n");
    sb.append("    validationKeyType: ").append(toIndentedString(validationKeyType)).append("\n");
    sb.append("    securityQuestion: ").append(toIndentedString(securityQuestion)).append("\n");
    sb.append("    securityAnswer: ").append(toIndentedString(securityAnswer)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    passwordChanged: ").append(toIndentedString(passwordChanged)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    maxNumProjects: ").append(toIndentedString(maxNumProjects)).append("\n");
    sb.append("    numCreatedProjects: ").append(toIndentedString(numCreatedProjects)).append("\n");
    sb.append("    numActiveProjects: ").append(toIndentedString(numActiveProjects)).append("\n");
    sb.append("    twoFactor: ").append(toIndentedString(twoFactor)).append("\n");
    sb.append("    salt: ").append(toIndentedString(salt)).append("\n");
    sb.append("    toursState: ").append(toIndentedString(toursState)).append("\n");
    sb.append("    bbcGroupCollection: ").append(toIndentedString(bbcGroupCollection)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    jupyterSettingsCollection: ").append(toIndentedString(jupyterSettingsCollection)).append("\n");
    sb.append("    tensorBoardCollection: ").append(toIndentedString(tensorBoardCollection)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    groupNames: ").append(toIndentedString(groupNames)).append("\n");
    sb.append("    statusName: ").append(toIndentedString(statusName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
