/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * LibraryVersionDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class LibraryVersionDTO {

  @SerializedName("version")
  private String version = null;

  @SerializedName("uploadTime")
  private OffsetDateTime uploadTime = null;
  public LibraryVersionDTO version(String version) {
    this.version = version;
    return this;
  }

  

  /**
  * Get version
  * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }
  public LibraryVersionDTO uploadTime(OffsetDateTime uploadTime) {
    this.uploadTime = uploadTime;
    return this;
  }

  

  /**
  * Get uploadTime
  * @return uploadTime
  **/
  @Schema(description = "")
  public OffsetDateTime getUploadTime() {
    return uploadTime;
  }
  public void setUploadTime(OffsetDateTime uploadTime) {
    this.uploadTime = uploadTime;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LibraryVersionDTO libraryVersionDTO = (LibraryVersionDTO) o;
    return Objects.equals(this.version, libraryVersionDTO.version) &&
        Objects.equals(this.uploadTime, libraryVersionDTO.uploadTime);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(version, uploadTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LibraryVersionDTO {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    uploadTime: ").append(toIndentedString(uploadTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
