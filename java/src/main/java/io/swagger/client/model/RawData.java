/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Field;
import io.swagger.client.model.Metadata;
import io.swagger.client.model.RawDataPK;
import io.swagger.client.model.TupleToFile;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RawData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class RawData {

  @SerializedName("rawdataPK")
  private RawDataPK rawdataPK = null;

  @SerializedName("tupleToFile")
  private TupleToFile tupleToFile = null;

  @SerializedName("metadata")
  private List<Metadata> metadata = null;

  @SerializedName("field")
  private Field field = null;

  @SerializedName("id")
  private Integer id = null;
  public RawData rawdataPK(RawDataPK rawdataPK) {
    this.rawdataPK = rawdataPK;
    return this;
  }

  

  /**
  * Get rawdataPK
  * @return rawdataPK
  **/
  @Schema(description = "")
  public RawDataPK getRawdataPK() {
    return rawdataPK;
  }
  public void setRawdataPK(RawDataPK rawdataPK) {
    this.rawdataPK = rawdataPK;
  }
  public RawData tupleToFile(TupleToFile tupleToFile) {
    this.tupleToFile = tupleToFile;
    return this;
  }

  

  /**
  * Get tupleToFile
  * @return tupleToFile
  **/
  @Schema(description = "")
  public TupleToFile getTupleToFile() {
    return tupleToFile;
  }
  public void setTupleToFile(TupleToFile tupleToFile) {
    this.tupleToFile = tupleToFile;
  }
  public RawData metadata(List<Metadata> metadata) {
    this.metadata = metadata;
    return this;
  }

  public RawData addMetadataItem(Metadata metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<Metadata>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

  /**
  * Get metadata
  * @return metadata
  **/
  @Schema(description = "")
  public List<Metadata> getMetadata() {
    return metadata;
  }
  public void setMetadata(List<Metadata> metadata) {
    this.metadata = metadata;
  }
  public RawData field(Field field) {
    this.field = field;
    return this;
  }

  

  /**
  * Get field
  * @return field
  **/
  @Schema(description = "")
  public Field getField() {
    return field;
  }
  public void setField(Field field) {
    this.field = field;
  }
  public RawData id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RawData rawData = (RawData) o;
    return Objects.equals(this.rawdataPK, rawData.rawdataPK) &&
        Objects.equals(this.tupleToFile, rawData.tupleToFile) &&
        Objects.equals(this.metadata, rawData.metadata) &&
        Objects.equals(this.field, rawData.field) &&
        Objects.equals(this.id, rawData.id);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(rawdataPK, tupleToFile, metadata, field, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RawData {\n");
    
    sb.append("    rawdataPK: ").append(toIndentedString(rawdataPK)).append("\n");
    sb.append("    tupleToFile: ").append(toIndentedString(tupleToFile)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
