/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AirflowOperatorDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AirflowDagDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class AirflowDagDTO {

  @SerializedName("name")
  private String name = null;

  @SerializedName("scheduleInterval")
  private String scheduleInterval = null;

  @SerializedName("apiKey")
  private String apiKey = null;

  @SerializedName("operators")
  private List<AirflowOperatorDTO> operators = null;
  public AirflowDagDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public AirflowDagDTO scheduleInterval(String scheduleInterval) {
    this.scheduleInterval = scheduleInterval;
    return this;
  }

  

  /**
  * Get scheduleInterval
  * @return scheduleInterval
  **/
  @Schema(description = "")
  public String getScheduleInterval() {
    return scheduleInterval;
  }
  public void setScheduleInterval(String scheduleInterval) {
    this.scheduleInterval = scheduleInterval;
  }
  public AirflowDagDTO apiKey(String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  

  /**
  * Get apiKey
  * @return apiKey
  **/
  @Schema(description = "")
  public String getApiKey() {
    return apiKey;
  }
  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }
  public AirflowDagDTO operators(List<AirflowOperatorDTO> operators) {
    this.operators = operators;
    return this;
  }

  public AirflowDagDTO addOperatorsItem(AirflowOperatorDTO operatorsItem) {
    if (this.operators == null) {
      this.operators = new ArrayList<AirflowOperatorDTO>();
    }
    this.operators.add(operatorsItem);
    return this;
  }

  /**
  * Get operators
  * @return operators
  **/
  @Schema(description = "")
  public List<AirflowOperatorDTO> getOperators() {
    return operators;
  }
  public void setOperators(List<AirflowOperatorDTO> operators) {
    this.operators = operators;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AirflowDagDTO airflowDagDTO = (AirflowDagDTO) o;
    return Objects.equals(this.name, airflowDagDTO.name) &&
        Objects.equals(this.scheduleInterval, airflowDagDTO.scheduleInterval) &&
        Objects.equals(this.apiKey, airflowDagDTO.apiKey) &&
        Objects.equals(this.operators, airflowDagDTO.operators);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(name, scheduleInterval, apiKey, operators);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AirflowDagDTO {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    scheduleInterval: ").append(toIndentedString(scheduleInterval)).append("\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
