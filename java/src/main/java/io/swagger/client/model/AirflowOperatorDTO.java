/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AirflowOperatorDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class AirflowOperatorDTO {

  @SerializedName("name")
  private String name = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("jobName")
  private String jobName = null;

  @SerializedName("wait")
  private Boolean wait = null;

  @SerializedName("dependsOn")
  private List<String> dependsOn = null;

  @SerializedName("featureGroupName")
  private String featureGroupName = null;
  public AirflowOperatorDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public AirflowOperatorDTO id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  public AirflowOperatorDTO jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

  

  /**
  * Get jobName
  * @return jobName
  **/
  @Schema(description = "")
  public String getJobName() {
    return jobName;
  }
  public void setJobName(String jobName) {
    this.jobName = jobName;
  }
  public AirflowOperatorDTO wait(Boolean wait) {
    this.wait = wait;
    return this;
  }

  

  /**
  * Get wait
  * @return wait
  **/
  @Schema(description = "")
  public Boolean isWait() {
    return wait;
  }
  public void setWait(Boolean wait) {
    this.wait = wait;
  }
  public AirflowOperatorDTO dependsOn(List<String> dependsOn) {
    this.dependsOn = dependsOn;
    return this;
  }

  public AirflowOperatorDTO addDependsOnItem(String dependsOnItem) {
    if (this.dependsOn == null) {
      this.dependsOn = new ArrayList<String>();
    }
    this.dependsOn.add(dependsOnItem);
    return this;
  }

  /**
  * Get dependsOn
  * @return dependsOn
  **/
  @Schema(description = "")
  public List<String> getDependsOn() {
    return dependsOn;
  }
  public void setDependsOn(List<String> dependsOn) {
    this.dependsOn = dependsOn;
  }
  public AirflowOperatorDTO featureGroupName(String featureGroupName) {
    this.featureGroupName = featureGroupName;
    return this;
  }

  

  /**
  * Get featureGroupName
  * @return featureGroupName
  **/
  @Schema(description = "")
  public String getFeatureGroupName() {
    return featureGroupName;
  }
  public void setFeatureGroupName(String featureGroupName) {
    this.featureGroupName = featureGroupName;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AirflowOperatorDTO airflowOperatorDTO = (AirflowOperatorDTO) o;
    return Objects.equals(this.name, airflowOperatorDTO.name) &&
        Objects.equals(this.id, airflowOperatorDTO.id) &&
        Objects.equals(this.jobName, airflowOperatorDTO.jobName) &&
        Objects.equals(this.wait, airflowOperatorDTO.wait) &&
        Objects.equals(this.dependsOn, airflowOperatorDTO.dependsOn) &&
        Objects.equals(this.featureGroupName, airflowOperatorDTO.featureGroupName);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(name, id, jobName, wait, dependsOn, featureGroupName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AirflowOperatorDTO {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    wait: ").append(toIndentedString(wait)).append("\n");
    sb.append("    dependsOn: ").append(toIndentedString(dependsOn)).append("\n");
    sb.append("    featureGroupName: ").append(toIndentedString(featureGroupName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
