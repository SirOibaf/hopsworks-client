/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * FeaturestoreDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class FeaturestoreDTO {

  @SerializedName("featurestoreId")
  private Integer featurestoreId = null;

  @SerializedName("featurestoreName")
  private String featurestoreName = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("hdfsStorePath")
  private String hdfsStorePath = null;

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("projectId")
  private Integer projectId = null;

  @SerializedName("featurestoreDescription")
  private String featurestoreDescription = null;

  @SerializedName("inodeId")
  private Long inodeId = null;

  @SerializedName("onlineFeaturestoreType")
  private String onlineFeaturestoreType = null;

  @SerializedName("onlineFeaturestoreName")
  private String onlineFeaturestoreName = null;

  @SerializedName("onlineFeaturestoreSize")
  private Double onlineFeaturestoreSize = null;

  @SerializedName("offlineFeaturestoreType")
  private String offlineFeaturestoreType = null;

  @SerializedName("offlineFeaturestoreName")
  private String offlineFeaturestoreName = null;

  @SerializedName("hiveEndpoint")
  private String hiveEndpoint = null;

  @SerializedName("mysqlServerEndpoint")
  private String mysqlServerEndpoint = null;

  @SerializedName("onlineEnabled")
  private Boolean onlineEnabled = null;
  public FeaturestoreDTO featurestoreId(Integer featurestoreId) {
    this.featurestoreId = featurestoreId;
    return this;
  }

  

  /**
  * Get featurestoreId
  * @return featurestoreId
  **/
  @Schema(description = "")
  public Integer getFeaturestoreId() {
    return featurestoreId;
  }
  public void setFeaturestoreId(Integer featurestoreId) {
    this.featurestoreId = featurestoreId;
  }
  public FeaturestoreDTO featurestoreName(String featurestoreName) {
    this.featurestoreName = featurestoreName;
    return this;
  }

  

  /**
  * Get featurestoreName
  * @return featurestoreName
  **/
  @Schema(description = "")
  public String getFeaturestoreName() {
    return featurestoreName;
  }
  public void setFeaturestoreName(String featurestoreName) {
    this.featurestoreName = featurestoreName;
  }
  public FeaturestoreDTO created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  

  /**
  * Get created
  * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }
  public FeaturestoreDTO hdfsStorePath(String hdfsStorePath) {
    this.hdfsStorePath = hdfsStorePath;
    return this;
  }

  

  /**
  * Get hdfsStorePath
  * @return hdfsStorePath
  **/
  @Schema(description = "")
  public String getHdfsStorePath() {
    return hdfsStorePath;
  }
  public void setHdfsStorePath(String hdfsStorePath) {
    this.hdfsStorePath = hdfsStorePath;
  }
  public FeaturestoreDTO projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  

  /**
  * Get projectName
  * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }
  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }
  public FeaturestoreDTO projectId(Integer projectId) {
    this.projectId = projectId;
    return this;
  }

  

  /**
  * Get projectId
  * @return projectId
  **/
  @Schema(description = "")
  public Integer getProjectId() {
    return projectId;
  }
  public void setProjectId(Integer projectId) {
    this.projectId = projectId;
  }
  public FeaturestoreDTO featurestoreDescription(String featurestoreDescription) {
    this.featurestoreDescription = featurestoreDescription;
    return this;
  }

  

  /**
  * Get featurestoreDescription
  * @return featurestoreDescription
  **/
  @Schema(description = "")
  public String getFeaturestoreDescription() {
    return featurestoreDescription;
  }
  public void setFeaturestoreDescription(String featurestoreDescription) {
    this.featurestoreDescription = featurestoreDescription;
  }
  public FeaturestoreDTO inodeId(Long inodeId) {
    this.inodeId = inodeId;
    return this;
  }

  

  /**
  * Get inodeId
  * @return inodeId
  **/
  @Schema(description = "")
  public Long getInodeId() {
    return inodeId;
  }
  public void setInodeId(Long inodeId) {
    this.inodeId = inodeId;
  }
  public FeaturestoreDTO onlineFeaturestoreType(String onlineFeaturestoreType) {
    this.onlineFeaturestoreType = onlineFeaturestoreType;
    return this;
  }

  

  /**
  * Get onlineFeaturestoreType
  * @return onlineFeaturestoreType
  **/
  @Schema(description = "")
  public String getOnlineFeaturestoreType() {
    return onlineFeaturestoreType;
  }
  public void setOnlineFeaturestoreType(String onlineFeaturestoreType) {
    this.onlineFeaturestoreType = onlineFeaturestoreType;
  }
  public FeaturestoreDTO onlineFeaturestoreName(String onlineFeaturestoreName) {
    this.onlineFeaturestoreName = onlineFeaturestoreName;
    return this;
  }

  

  /**
  * Get onlineFeaturestoreName
  * @return onlineFeaturestoreName
  **/
  @Schema(description = "")
  public String getOnlineFeaturestoreName() {
    return onlineFeaturestoreName;
  }
  public void setOnlineFeaturestoreName(String onlineFeaturestoreName) {
    this.onlineFeaturestoreName = onlineFeaturestoreName;
  }
  public FeaturestoreDTO onlineFeaturestoreSize(Double onlineFeaturestoreSize) {
    this.onlineFeaturestoreSize = onlineFeaturestoreSize;
    return this;
  }

  

  /**
  * Get onlineFeaturestoreSize
  * @return onlineFeaturestoreSize
  **/
  @Schema(description = "")
  public Double getOnlineFeaturestoreSize() {
    return onlineFeaturestoreSize;
  }
  public void setOnlineFeaturestoreSize(Double onlineFeaturestoreSize) {
    this.onlineFeaturestoreSize = onlineFeaturestoreSize;
  }
  public FeaturestoreDTO offlineFeaturestoreType(String offlineFeaturestoreType) {
    this.offlineFeaturestoreType = offlineFeaturestoreType;
    return this;
  }

  

  /**
  * Get offlineFeaturestoreType
  * @return offlineFeaturestoreType
  **/
  @Schema(description = "")
  public String getOfflineFeaturestoreType() {
    return offlineFeaturestoreType;
  }
  public void setOfflineFeaturestoreType(String offlineFeaturestoreType) {
    this.offlineFeaturestoreType = offlineFeaturestoreType;
  }
  public FeaturestoreDTO offlineFeaturestoreName(String offlineFeaturestoreName) {
    this.offlineFeaturestoreName = offlineFeaturestoreName;
    return this;
  }

  

  /**
  * Get offlineFeaturestoreName
  * @return offlineFeaturestoreName
  **/
  @Schema(description = "")
  public String getOfflineFeaturestoreName() {
    return offlineFeaturestoreName;
  }
  public void setOfflineFeaturestoreName(String offlineFeaturestoreName) {
    this.offlineFeaturestoreName = offlineFeaturestoreName;
  }
  public FeaturestoreDTO hiveEndpoint(String hiveEndpoint) {
    this.hiveEndpoint = hiveEndpoint;
    return this;
  }

  

  /**
  * Get hiveEndpoint
  * @return hiveEndpoint
  **/
  @Schema(description = "")
  public String getHiveEndpoint() {
    return hiveEndpoint;
  }
  public void setHiveEndpoint(String hiveEndpoint) {
    this.hiveEndpoint = hiveEndpoint;
  }
  public FeaturestoreDTO mysqlServerEndpoint(String mysqlServerEndpoint) {
    this.mysqlServerEndpoint = mysqlServerEndpoint;
    return this;
  }

  

  /**
  * Get mysqlServerEndpoint
  * @return mysqlServerEndpoint
  **/
  @Schema(description = "")
  public String getMysqlServerEndpoint() {
    return mysqlServerEndpoint;
  }
  public void setMysqlServerEndpoint(String mysqlServerEndpoint) {
    this.mysqlServerEndpoint = mysqlServerEndpoint;
  }
  public FeaturestoreDTO onlineEnabled(Boolean onlineEnabled) {
    this.onlineEnabled = onlineEnabled;
    return this;
  }

  

  /**
  * Get onlineEnabled
  * @return onlineEnabled
  **/
  @Schema(description = "")
  public Boolean isOnlineEnabled() {
    return onlineEnabled;
  }
  public void setOnlineEnabled(Boolean onlineEnabled) {
    this.onlineEnabled = onlineEnabled;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeaturestoreDTO featurestoreDTO = (FeaturestoreDTO) o;
    return Objects.equals(this.featurestoreId, featurestoreDTO.featurestoreId) &&
        Objects.equals(this.featurestoreName, featurestoreDTO.featurestoreName) &&
        Objects.equals(this.created, featurestoreDTO.created) &&
        Objects.equals(this.hdfsStorePath, featurestoreDTO.hdfsStorePath) &&
        Objects.equals(this.projectName, featurestoreDTO.projectName) &&
        Objects.equals(this.projectId, featurestoreDTO.projectId) &&
        Objects.equals(this.featurestoreDescription, featurestoreDTO.featurestoreDescription) &&
        Objects.equals(this.inodeId, featurestoreDTO.inodeId) &&
        Objects.equals(this.onlineFeaturestoreType, featurestoreDTO.onlineFeaturestoreType) &&
        Objects.equals(this.onlineFeaturestoreName, featurestoreDTO.onlineFeaturestoreName) &&
        Objects.equals(this.onlineFeaturestoreSize, featurestoreDTO.onlineFeaturestoreSize) &&
        Objects.equals(this.offlineFeaturestoreType, featurestoreDTO.offlineFeaturestoreType) &&
        Objects.equals(this.offlineFeaturestoreName, featurestoreDTO.offlineFeaturestoreName) &&
        Objects.equals(this.hiveEndpoint, featurestoreDTO.hiveEndpoint) &&
        Objects.equals(this.mysqlServerEndpoint, featurestoreDTO.mysqlServerEndpoint) &&
        Objects.equals(this.onlineEnabled, featurestoreDTO.onlineEnabled);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(featurestoreId, featurestoreName, created, hdfsStorePath, projectName, projectId, featurestoreDescription, inodeId, onlineFeaturestoreType, onlineFeaturestoreName, onlineFeaturestoreSize, offlineFeaturestoreType, offlineFeaturestoreName, hiveEndpoint, mysqlServerEndpoint, onlineEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeaturestoreDTO {\n");
    
    sb.append("    featurestoreId: ").append(toIndentedString(featurestoreId)).append("\n");
    sb.append("    featurestoreName: ").append(toIndentedString(featurestoreName)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    hdfsStorePath: ").append(toIndentedString(hdfsStorePath)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    featurestoreDescription: ").append(toIndentedString(featurestoreDescription)).append("\n");
    sb.append("    inodeId: ").append(toIndentedString(inodeId)).append("\n");
    sb.append("    onlineFeaturestoreType: ").append(toIndentedString(onlineFeaturestoreType)).append("\n");
    sb.append("    onlineFeaturestoreName: ").append(toIndentedString(onlineFeaturestoreName)).append("\n");
    sb.append("    onlineFeaturestoreSize: ").append(toIndentedString(onlineFeaturestoreSize)).append("\n");
    sb.append("    offlineFeaturestoreType: ").append(toIndentedString(offlineFeaturestoreType)).append("\n");
    sb.append("    offlineFeaturestoreName: ").append(toIndentedString(offlineFeaturestoreName)).append("\n");
    sb.append("    hiveEndpoint: ").append(toIndentedString(hiveEndpoint)).append("\n");
    sb.append("    mysqlServerEndpoint: ").append(toIndentedString(mysqlServerEndpoint)).append("\n");
    sb.append("    onlineEnabled: ").append(toIndentedString(onlineEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
