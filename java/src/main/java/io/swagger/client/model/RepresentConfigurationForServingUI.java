/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * RepresentConfigurationForServingUI
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class RepresentConfigurationForServingUI {

  @SerializedName("maxNumInstances")
  private Integer maxNumInstances = null;

  @SerializedName("kafkaTopicSchema")
  private String kafkaTopicSchema = null;

  @SerializedName("kafkaTopicSchemaVersion")
  private Integer kafkaTopicSchemaVersion = null;
  /**
  * Max number of serving instances of model
  * @return maxNumInstances
  **/
  @Schema(description = "Max number of serving instances of model")
  public Integer getMaxNumInstances() {
    return maxNumInstances;
  }
  /**
  * Schema name for the Kafka topic used for logging
  * @return kafkaTopicSchema
  **/
  @Schema(description = "Schema name for the Kafka topic used for logging")
  public String getKafkaTopicSchema() {
    return kafkaTopicSchema;
  }
  /**
  * Schema version for the Kafka topic used for logging
  * @return kafkaTopicSchemaVersion
  **/
  @Schema(description = "Schema version for the Kafka topic used for logging")
  public Integer getKafkaTopicSchemaVersion() {
    return kafkaTopicSchemaVersion;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepresentConfigurationForServingUI representConfigurationForServingUI = (RepresentConfigurationForServingUI) o;
    return Objects.equals(this.maxNumInstances, representConfigurationForServingUI.maxNumInstances) &&
        Objects.equals(this.kafkaTopicSchema, representConfigurationForServingUI.kafkaTopicSchema) &&
        Objects.equals(this.kafkaTopicSchemaVersion, representConfigurationForServingUI.kafkaTopicSchemaVersion);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(maxNumInstances, kafkaTopicSchema, kafkaTopicSchemaVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepresentConfigurationForServingUI {\n");
    
    sb.append("    maxNumInstances: ").append(toIndentedString(maxNumInstances)).append("\n");
    sb.append("    kafkaTopicSchema: ").append(toIndentedString(kafkaTopicSchema)).append("\n");
    sb.append("    kafkaTopicSchemaVersion: ").append(toIndentedString(kafkaTopicSchemaVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
