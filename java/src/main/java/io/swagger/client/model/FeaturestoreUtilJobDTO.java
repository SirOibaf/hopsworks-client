/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FeatureDTO;
import io.swagger.client.model.FeaturegroupDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * FeaturestoreUtilJobDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class FeaturestoreUtilJobDTO {

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("features")
  private List<FeatureDTO> features = null;

  @SerializedName("featuregroups")
  private List<FeaturegroupDTO> featuregroups = null;

  @SerializedName("featurestore")
  private String featurestore = null;

  @SerializedName("trainingDataset")
  private String trainingDataset = null;

  @SerializedName("featuregroup")
  private String featuregroup = null;

  @SerializedName("joinKey")
  private String joinKey = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dataFormat")
  private String dataFormat = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("descriptiveStats")
  private Boolean descriptiveStats = null;

  @SerializedName("featureCorrelation")
  private Boolean featureCorrelation = null;

  @SerializedName("clusterAnalysis")
  private Boolean clusterAnalysis = null;

  @SerializedName("featureHistograms")
  private Boolean featureHistograms = null;

  @SerializedName("statColumns")
  private List<String> statColumns = null;

  @SerializedName("operation")
  private String operation = null;

  @SerializedName("sqlQuery")
  private String sqlQuery = null;

  @SerializedName("hiveDatabase")
  private String hiveDatabase = null;

  @SerializedName("jdbcString")
  private String jdbcString = null;

  @SerializedName("jdbcArguments")
  private List<String> jdbcArguments = null;

  @SerializedName("online")
  private Boolean online = null;
  public FeaturestoreUtilJobDTO fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  

  /**
  * Get fileName
  * @return fileName
  **/
  @Schema(description = "")
  public String getFileName() {
    return fileName;
  }
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }
  public FeaturestoreUtilJobDTO features(List<FeatureDTO> features) {
    this.features = features;
    return this;
  }

  public FeaturestoreUtilJobDTO addFeaturesItem(FeatureDTO featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<FeatureDTO>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
  * Get features
  * @return features
  **/
  @Schema(description = "")
  public List<FeatureDTO> getFeatures() {
    return features;
  }
  public void setFeatures(List<FeatureDTO> features) {
    this.features = features;
  }
  public FeaturestoreUtilJobDTO featuregroups(List<FeaturegroupDTO> featuregroups) {
    this.featuregroups = featuregroups;
    return this;
  }

  public FeaturestoreUtilJobDTO addFeaturegroupsItem(FeaturegroupDTO featuregroupsItem) {
    if (this.featuregroups == null) {
      this.featuregroups = new ArrayList<FeaturegroupDTO>();
    }
    this.featuregroups.add(featuregroupsItem);
    return this;
  }

  /**
  * Get featuregroups
  * @return featuregroups
  **/
  @Schema(description = "")
  public List<FeaturegroupDTO> getFeaturegroups() {
    return featuregroups;
  }
  public void setFeaturegroups(List<FeaturegroupDTO> featuregroups) {
    this.featuregroups = featuregroups;
  }
  public FeaturestoreUtilJobDTO featurestore(String featurestore) {
    this.featurestore = featurestore;
    return this;
  }

  

  /**
  * Get featurestore
  * @return featurestore
  **/
  @Schema(description = "")
  public String getFeaturestore() {
    return featurestore;
  }
  public void setFeaturestore(String featurestore) {
    this.featurestore = featurestore;
  }
  public FeaturestoreUtilJobDTO trainingDataset(String trainingDataset) {
    this.trainingDataset = trainingDataset;
    return this;
  }

  

  /**
  * Get trainingDataset
  * @return trainingDataset
  **/
  @Schema(description = "")
  public String getTrainingDataset() {
    return trainingDataset;
  }
  public void setTrainingDataset(String trainingDataset) {
    this.trainingDataset = trainingDataset;
  }
  public FeaturestoreUtilJobDTO featuregroup(String featuregroup) {
    this.featuregroup = featuregroup;
    return this;
  }

  

  /**
  * Get featuregroup
  * @return featuregroup
  **/
  @Schema(description = "")
  public String getFeaturegroup() {
    return featuregroup;
  }
  public void setFeaturegroup(String featuregroup) {
    this.featuregroup = featuregroup;
  }
  public FeaturestoreUtilJobDTO joinKey(String joinKey) {
    this.joinKey = joinKey;
    return this;
  }

  

  /**
  * Get joinKey
  * @return joinKey
  **/
  @Schema(description = "")
  public String getJoinKey() {
    return joinKey;
  }
  public void setJoinKey(String joinKey) {
    this.joinKey = joinKey;
  }
  public FeaturestoreUtilJobDTO description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public FeaturestoreUtilJobDTO dataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
    return this;
  }

  

  /**
  * Get dataFormat
  * @return dataFormat
  **/
  @Schema(description = "")
  public String getDataFormat() {
    return dataFormat;
  }
  public void setDataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
  }
  public FeaturestoreUtilJobDTO version(Integer version) {
    this.version = version;
    return this;
  }

  

  /**
  * Get version
  * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }
  public void setVersion(Integer version) {
    this.version = version;
  }
  public FeaturestoreUtilJobDTO descriptiveStats(Boolean descriptiveStats) {
    this.descriptiveStats = descriptiveStats;
    return this;
  }

  

  /**
  * Get descriptiveStats
  * @return descriptiveStats
  **/
  @Schema(description = "")
  public Boolean isDescriptiveStats() {
    return descriptiveStats;
  }
  public void setDescriptiveStats(Boolean descriptiveStats) {
    this.descriptiveStats = descriptiveStats;
  }
  public FeaturestoreUtilJobDTO featureCorrelation(Boolean featureCorrelation) {
    this.featureCorrelation = featureCorrelation;
    return this;
  }

  

  /**
  * Get featureCorrelation
  * @return featureCorrelation
  **/
  @Schema(description = "")
  public Boolean isFeatureCorrelation() {
    return featureCorrelation;
  }
  public void setFeatureCorrelation(Boolean featureCorrelation) {
    this.featureCorrelation = featureCorrelation;
  }
  public FeaturestoreUtilJobDTO clusterAnalysis(Boolean clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
    return this;
  }

  

  /**
  * Get clusterAnalysis
  * @return clusterAnalysis
  **/
  @Schema(description = "")
  public Boolean isClusterAnalysis() {
    return clusterAnalysis;
  }
  public void setClusterAnalysis(Boolean clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
  }
  public FeaturestoreUtilJobDTO featureHistograms(Boolean featureHistograms) {
    this.featureHistograms = featureHistograms;
    return this;
  }

  

  /**
  * Get featureHistograms
  * @return featureHistograms
  **/
  @Schema(description = "")
  public Boolean isFeatureHistograms() {
    return featureHistograms;
  }
  public void setFeatureHistograms(Boolean featureHistograms) {
    this.featureHistograms = featureHistograms;
  }
  public FeaturestoreUtilJobDTO statColumns(List<String> statColumns) {
    this.statColumns = statColumns;
    return this;
  }

  public FeaturestoreUtilJobDTO addStatColumnsItem(String statColumnsItem) {
    if (this.statColumns == null) {
      this.statColumns = new ArrayList<String>();
    }
    this.statColumns.add(statColumnsItem);
    return this;
  }

  /**
  * Get statColumns
  * @return statColumns
  **/
  @Schema(description = "")
  public List<String> getStatColumns() {
    return statColumns;
  }
  public void setStatColumns(List<String> statColumns) {
    this.statColumns = statColumns;
  }
  public FeaturestoreUtilJobDTO operation(String operation) {
    this.operation = operation;
    return this;
  }

  

  /**
  * Get operation
  * @return operation
  **/
  @Schema(description = "")
  public String getOperation() {
    return operation;
  }
  public void setOperation(String operation) {
    this.operation = operation;
  }
  public FeaturestoreUtilJobDTO sqlQuery(String sqlQuery) {
    this.sqlQuery = sqlQuery;
    return this;
  }

  

  /**
  * Get sqlQuery
  * @return sqlQuery
  **/
  @Schema(description = "")
  public String getSqlQuery() {
    return sqlQuery;
  }
  public void setSqlQuery(String sqlQuery) {
    this.sqlQuery = sqlQuery;
  }
  public FeaturestoreUtilJobDTO hiveDatabase(String hiveDatabase) {
    this.hiveDatabase = hiveDatabase;
    return this;
  }

  

  /**
  * Get hiveDatabase
  * @return hiveDatabase
  **/
  @Schema(description = "")
  public String getHiveDatabase() {
    return hiveDatabase;
  }
  public void setHiveDatabase(String hiveDatabase) {
    this.hiveDatabase = hiveDatabase;
  }
  public FeaturestoreUtilJobDTO jdbcString(String jdbcString) {
    this.jdbcString = jdbcString;
    return this;
  }

  

  /**
  * Get jdbcString
  * @return jdbcString
  **/
  @Schema(description = "")
  public String getJdbcString() {
    return jdbcString;
  }
  public void setJdbcString(String jdbcString) {
    this.jdbcString = jdbcString;
  }
  public FeaturestoreUtilJobDTO jdbcArguments(List<String> jdbcArguments) {
    this.jdbcArguments = jdbcArguments;
    return this;
  }

  public FeaturestoreUtilJobDTO addJdbcArgumentsItem(String jdbcArgumentsItem) {
    if (this.jdbcArguments == null) {
      this.jdbcArguments = new ArrayList<String>();
    }
    this.jdbcArguments.add(jdbcArgumentsItem);
    return this;
  }

  /**
  * Get jdbcArguments
  * @return jdbcArguments
  **/
  @Schema(description = "")
  public List<String> getJdbcArguments() {
    return jdbcArguments;
  }
  public void setJdbcArguments(List<String> jdbcArguments) {
    this.jdbcArguments = jdbcArguments;
  }
  public FeaturestoreUtilJobDTO online(Boolean online) {
    this.online = online;
    return this;
  }

  

  /**
  * Get online
  * @return online
  **/
  @Schema(description = "")
  public Boolean isOnline() {
    return online;
  }
  public void setOnline(Boolean online) {
    this.online = online;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeaturestoreUtilJobDTO featurestoreUtilJobDTO = (FeaturestoreUtilJobDTO) o;
    return Objects.equals(this.fileName, featurestoreUtilJobDTO.fileName) &&
        Objects.equals(this.features, featurestoreUtilJobDTO.features) &&
        Objects.equals(this.featuregroups, featurestoreUtilJobDTO.featuregroups) &&
        Objects.equals(this.featurestore, featurestoreUtilJobDTO.featurestore) &&
        Objects.equals(this.trainingDataset, featurestoreUtilJobDTO.trainingDataset) &&
        Objects.equals(this.featuregroup, featurestoreUtilJobDTO.featuregroup) &&
        Objects.equals(this.joinKey, featurestoreUtilJobDTO.joinKey) &&
        Objects.equals(this.description, featurestoreUtilJobDTO.description) &&
        Objects.equals(this.dataFormat, featurestoreUtilJobDTO.dataFormat) &&
        Objects.equals(this.version, featurestoreUtilJobDTO.version) &&
        Objects.equals(this.descriptiveStats, featurestoreUtilJobDTO.descriptiveStats) &&
        Objects.equals(this.featureCorrelation, featurestoreUtilJobDTO.featureCorrelation) &&
        Objects.equals(this.clusterAnalysis, featurestoreUtilJobDTO.clusterAnalysis) &&
        Objects.equals(this.featureHistograms, featurestoreUtilJobDTO.featureHistograms) &&
        Objects.equals(this.statColumns, featurestoreUtilJobDTO.statColumns) &&
        Objects.equals(this.operation, featurestoreUtilJobDTO.operation) &&
        Objects.equals(this.sqlQuery, featurestoreUtilJobDTO.sqlQuery) &&
        Objects.equals(this.hiveDatabase, featurestoreUtilJobDTO.hiveDatabase) &&
        Objects.equals(this.jdbcString, featurestoreUtilJobDTO.jdbcString) &&
        Objects.equals(this.jdbcArguments, featurestoreUtilJobDTO.jdbcArguments) &&
        Objects.equals(this.online, featurestoreUtilJobDTO.online);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(fileName, features, featuregroups, featurestore, trainingDataset, featuregroup, joinKey, description, dataFormat, version, descriptiveStats, featureCorrelation, clusterAnalysis, featureHistograms, statColumns, operation, sqlQuery, hiveDatabase, jdbcString, jdbcArguments, online);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeaturestoreUtilJobDTO {\n");
    
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    featuregroups: ").append(toIndentedString(featuregroups)).append("\n");
    sb.append("    featurestore: ").append(toIndentedString(featurestore)).append("\n");
    sb.append("    trainingDataset: ").append(toIndentedString(trainingDataset)).append("\n");
    sb.append("    featuregroup: ").append(toIndentedString(featuregroup)).append("\n");
    sb.append("    joinKey: ").append(toIndentedString(joinKey)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dataFormat: ").append(toIndentedString(dataFormat)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    descriptiveStats: ").append(toIndentedString(descriptiveStats)).append("\n");
    sb.append("    featureCorrelation: ").append(toIndentedString(featureCorrelation)).append("\n");
    sb.append("    clusterAnalysis: ").append(toIndentedString(clusterAnalysis)).append("\n");
    sb.append("    featureHistograms: ").append(toIndentedString(featureHistograms)).append("\n");
    sb.append("    statColumns: ").append(toIndentedString(statColumns)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    sqlQuery: ").append(toIndentedString(sqlQuery)).append("\n");
    sb.append("    hiveDatabase: ").append(toIndentedString(hiveDatabase)).append("\n");
    sb.append("    jdbcString: ").append(toIndentedString(jdbcString)).append("\n");
    sb.append("    jdbcArguments: ").append(toIndentedString(jdbcArguments)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
