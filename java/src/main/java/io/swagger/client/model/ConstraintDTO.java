/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ConstraintDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConstraintDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class ConstraintDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<ConstraintDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("hint")
  private String hint = null;

  @SerializedName("min")
  private Double min = null;

  @SerializedName("max")
  private Double max = null;

  @SerializedName("columns")
  private List<String> columns = null;
  public ConstraintDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public ConstraintDTO items(List<ConstraintDTO> items) {
    this.items = items;
    return this;
  }

  public ConstraintDTO addItemsItem(ConstraintDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<ConstraintDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<ConstraintDTO> getItems() {
    return items;
  }
  public void setItems(List<ConstraintDTO> items) {
    this.items = items;
  }
  public ConstraintDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public ConstraintDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ConstraintDTO hint(String hint) {
    this.hint = hint;
    return this;
  }

  

  /**
  * Get hint
  * @return hint
  **/
  @Schema(description = "")
  public String getHint() {
    return hint;
  }
  public void setHint(String hint) {
    this.hint = hint;
  }
  public ConstraintDTO min(Double min) {
    this.min = min;
    return this;
  }

  

  /**
  * Get min
  * @return min
  **/
  @Schema(description = "")
  public Double getMin() {
    return min;
  }
  public void setMin(Double min) {
    this.min = min;
  }
  public ConstraintDTO max(Double max) {
    this.max = max;
    return this;
  }

  

  /**
  * Get max
  * @return max
  **/
  @Schema(description = "")
  public Double getMax() {
    return max;
  }
  public void setMax(Double max) {
    this.max = max;
  }
  public ConstraintDTO columns(List<String> columns) {
    this.columns = columns;
    return this;
  }

  public ConstraintDTO addColumnsItem(String columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<String>();
    }
    this.columns.add(columnsItem);
    return this;
  }

  /**
  * Get columns
  * @return columns
  **/
  @Schema(description = "")
  public List<String> getColumns() {
    return columns;
  }
  public void setColumns(List<String> columns) {
    this.columns = columns;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConstraintDTO constraintDTO = (ConstraintDTO) o;
    return Objects.equals(this.href, constraintDTO.href) &&
        Objects.equals(this.items, constraintDTO.items) &&
        Objects.equals(this.count, constraintDTO.count) &&
        Objects.equals(this.name, constraintDTO.name) &&
        Objects.equals(this.hint, constraintDTO.hint) &&
        Objects.equals(this.min, constraintDTO.min) &&
        Objects.equals(this.max, constraintDTO.max) &&
        Objects.equals(this.columns, constraintDTO.columns);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, name, hint, min, max, columns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConstraintDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    hint: ").append(toIndentedString(hint)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
