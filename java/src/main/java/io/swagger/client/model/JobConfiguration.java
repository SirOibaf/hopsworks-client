/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ScheduleDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * JobConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class JobConfiguration {

  @SerializedName("appName")
  private String appName = null;

  @SerializedName("schedule")
  private ScheduleDTO schedule = null;
  /**
   * Gets or Sets jobType
   */
  @JsonAdapter(JobTypeEnum.Adapter.class)
  public enum JobTypeEnum {
    YARN("YARN"),
    FLINK("FLINK"),
    SPARK("SPARK"),
    PYSPARK("PYSPARK"),
    BEAM_FLINK("BEAM_FLINK"),
    BEAM_SPARK("BEAM_SPARK"),
    ERASURE_CODING("ERASURE_CODING");

    private String value;

    JobTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static JobTypeEnum fromValue(String text) {
      for (JobTypeEnum b : JobTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<JobTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JobTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("jobType")
  private JobTypeEnum jobType = null;

  @SerializedName("jobTypeName")
  private String jobTypeName = null;
  public JobConfiguration appName(String appName) {
    this.appName = appName;
    return this;
  }

  

  /**
  * Get appName
  * @return appName
  **/
  @Schema(description = "")
  public String getAppName() {
    return appName;
  }
  public void setAppName(String appName) {
    this.appName = appName;
  }
  public JobConfiguration schedule(ScheduleDTO schedule) {
    this.schedule = schedule;
    return this;
  }

  

  /**
  * Get schedule
  * @return schedule
  **/
  @Schema(description = "")
  public ScheduleDTO getSchedule() {
    return schedule;
  }
  public void setSchedule(ScheduleDTO schedule) {
    this.schedule = schedule;
  }
  public JobConfiguration jobType(JobTypeEnum jobType) {
    this.jobType = jobType;
    return this;
  }

  

  /**
  * Get jobType
  * @return jobType
  **/
  @Schema(description = "")
  public JobTypeEnum getJobType() {
    return jobType;
  }
  public void setJobType(JobTypeEnum jobType) {
    this.jobType = jobType;
  }
  public JobConfiguration jobTypeName(String jobTypeName) {
    this.jobTypeName = jobTypeName;
    return this;
  }

  

  /**
  * Get jobTypeName
  * @return jobTypeName
  **/
  @Schema(description = "")
  public String getJobTypeName() {
    return jobTypeName;
  }
  public void setJobTypeName(String jobTypeName) {
    this.jobTypeName = jobTypeName;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobConfiguration jobConfiguration = (JobConfiguration) o;
    return Objects.equals(this.appName, jobConfiguration.appName) &&
        Objects.equals(this.schedule, jobConfiguration.schedule) &&
        Objects.equals(this.jobType, jobConfiguration.jobType) &&
        Objects.equals(this.jobTypeName, jobConfiguration.jobTypeName);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(appName, schedule, jobType, jobTypeName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobConfiguration {\n");
    
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    jobTypeName: ").append(toIndentedString(jobTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
