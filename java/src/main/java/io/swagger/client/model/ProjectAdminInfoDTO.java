/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.QuotasDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ProjectAdminInfoDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class ProjectAdminInfoDTO {

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("projectOwner")
  private String projectOwner = null;

  @SerializedName("archived")
  private Boolean archived = null;
  /**
   * Gets or Sets paymentType
   */
  @JsonAdapter(PaymentTypeEnum.Adapter.class)
  public enum PaymentTypeEnum {
    PREPAID("PREPAID"),
    NOLIMIT("NOLIMIT");

    private String value;

    PaymentTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PaymentTypeEnum fromValue(String text) {
      for (PaymentTypeEnum b : PaymentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PaymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("paymentType")
  private PaymentTypeEnum paymentType = null;

  @SerializedName("lastQuotaUpdate")
  private OffsetDateTime lastQuotaUpdate = null;

  @SerializedName("projectQuotas")
  private QuotasDTO projectQuotas = null;
  public ProjectAdminInfoDTO projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  

  /**
  * Get projectName
  * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }
  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }
  public ProjectAdminInfoDTO projectOwner(String projectOwner) {
    this.projectOwner = projectOwner;
    return this;
  }

  

  /**
  * Get projectOwner
  * @return projectOwner
  **/
  @Schema(description = "")
  public String getProjectOwner() {
    return projectOwner;
  }
  public void setProjectOwner(String projectOwner) {
    this.projectOwner = projectOwner;
  }
  public ProjectAdminInfoDTO archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

  

  /**
  * Get archived
  * @return archived
  **/
  @Schema(description = "")
  public Boolean isArchived() {
    return archived;
  }
  public void setArchived(Boolean archived) {
    this.archived = archived;
  }
  public ProjectAdminInfoDTO paymentType(PaymentTypeEnum paymentType) {
    this.paymentType = paymentType;
    return this;
  }

  

  /**
  * Get paymentType
  * @return paymentType
  **/
  @Schema(description = "")
  public PaymentTypeEnum getPaymentType() {
    return paymentType;
  }
  public void setPaymentType(PaymentTypeEnum paymentType) {
    this.paymentType = paymentType;
  }
  public ProjectAdminInfoDTO lastQuotaUpdate(OffsetDateTime lastQuotaUpdate) {
    this.lastQuotaUpdate = lastQuotaUpdate;
    return this;
  }

  

  /**
  * Get lastQuotaUpdate
  * @return lastQuotaUpdate
  **/
  @Schema(description = "")
  public OffsetDateTime getLastQuotaUpdate() {
    return lastQuotaUpdate;
  }
  public void setLastQuotaUpdate(OffsetDateTime lastQuotaUpdate) {
    this.lastQuotaUpdate = lastQuotaUpdate;
  }
  public ProjectAdminInfoDTO projectQuotas(QuotasDTO projectQuotas) {
    this.projectQuotas = projectQuotas;
    return this;
  }

  

  /**
  * Get projectQuotas
  * @return projectQuotas
  **/
  @Schema(description = "")
  public QuotasDTO getProjectQuotas() {
    return projectQuotas;
  }
  public void setProjectQuotas(QuotasDTO projectQuotas) {
    this.projectQuotas = projectQuotas;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectAdminInfoDTO projectAdminInfoDTO = (ProjectAdminInfoDTO) o;
    return Objects.equals(this.projectName, projectAdminInfoDTO.projectName) &&
        Objects.equals(this.projectOwner, projectAdminInfoDTO.projectOwner) &&
        Objects.equals(this.archived, projectAdminInfoDTO.archived) &&
        Objects.equals(this.paymentType, projectAdminInfoDTO.paymentType) &&
        Objects.equals(this.lastQuotaUpdate, projectAdminInfoDTO.lastQuotaUpdate) &&
        Objects.equals(this.projectQuotas, projectAdminInfoDTO.projectQuotas);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(projectName, projectOwner, archived, paymentType, lastQuotaUpdate, projectQuotas);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectAdminInfoDTO {\n");
    
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectOwner: ").append(toIndentedString(projectOwner)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    lastQuotaUpdate: ").append(toIndentedString(lastQuotaUpdate)).append("\n");
    sb.append("    projectQuotas: ").append(toIndentedString(projectQuotas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
