/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Project;
import io.swagger.client.model.TensorBoardPK;
import io.swagger.client.model.Users;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * TensorBoard
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class TensorBoard {

  @SerializedName("tensorBoardPK")
  private TensorBoardPK tensorBoardPK = null;

  @SerializedName("hdfsUserId")
  private Integer hdfsUserId = null;

  @SerializedName("pid")
  private Integer pid = null;

  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("elasticId")
  private String elasticId = null;

  @SerializedName("lastAccessed")
  private OffsetDateTime lastAccessed = null;

  @SerializedName("hdfsLogdir")
  private String hdfsLogdir = null;

  @SerializedName("secret")
  private String secret = null;

  @SerializedName("project")
  private Project project = null;

  @SerializedName("users")
  private Users users = null;
  public TensorBoard tensorBoardPK(TensorBoardPK tensorBoardPK) {
    this.tensorBoardPK = tensorBoardPK;
    return this;
  }

  

  /**
  * Get tensorBoardPK
  * @return tensorBoardPK
  **/
  @Schema(description = "")
  public TensorBoardPK getTensorBoardPK() {
    return tensorBoardPK;
  }
  public void setTensorBoardPK(TensorBoardPK tensorBoardPK) {
    this.tensorBoardPK = tensorBoardPK;
  }
  public TensorBoard hdfsUserId(Integer hdfsUserId) {
    this.hdfsUserId = hdfsUserId;
    return this;
  }

  

  /**
  * Get hdfsUserId
  * @return hdfsUserId
  **/
  @Schema(required = true, description = "")
  public Integer getHdfsUserId() {
    return hdfsUserId;
  }
  public void setHdfsUserId(Integer hdfsUserId) {
    this.hdfsUserId = hdfsUserId;
  }
  public TensorBoard pid(Integer pid) {
    this.pid = pid;
    return this;
  }

  

  /**
  * Get pid
  * @return pid
  **/
  @Schema(description = "")
  public Integer getPid() {
    return pid;
  }
  public void setPid(Integer pid) {
    this.pid = pid;
  }
  public TensorBoard endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  

  /**
  * Get endpoint
  * @return endpoint
  **/
  @Schema(description = "")
  public String getEndpoint() {
    return endpoint;
  }
  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }
  public TensorBoard elasticId(String elasticId) {
    this.elasticId = elasticId;
    return this;
  }

  

  /**
  * Get elasticId
  * @return elasticId
  **/
  @Schema(description = "")
  public String getElasticId() {
    return elasticId;
  }
  public void setElasticId(String elasticId) {
    this.elasticId = elasticId;
  }
  public TensorBoard lastAccessed(OffsetDateTime lastAccessed) {
    this.lastAccessed = lastAccessed;
    return this;
  }

  

  /**
  * Get lastAccessed
  * @return lastAccessed
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getLastAccessed() {
    return lastAccessed;
  }
  public void setLastAccessed(OffsetDateTime lastAccessed) {
    this.lastAccessed = lastAccessed;
  }
  public TensorBoard hdfsLogdir(String hdfsLogdir) {
    this.hdfsLogdir = hdfsLogdir;
    return this;
  }

  

  /**
  * Get hdfsLogdir
  * @return hdfsLogdir
  **/
  @Schema(description = "")
  public String getHdfsLogdir() {
    return hdfsLogdir;
  }
  public void setHdfsLogdir(String hdfsLogdir) {
    this.hdfsLogdir = hdfsLogdir;
  }
  public TensorBoard secret(String secret) {
    this.secret = secret;
    return this;
  }

  

  /**
  * Get secret
  * @return secret
  **/
  @Schema(required = true, description = "")
  public String getSecret() {
    return secret;
  }
  public void setSecret(String secret) {
    this.secret = secret;
  }
  public TensorBoard project(Project project) {
    this.project = project;
    return this;
  }

  

  /**
  * Get project
  * @return project
  **/
  @Schema(description = "")
  public Project getProject() {
    return project;
  }
  public void setProject(Project project) {
    this.project = project;
  }
  public TensorBoard users(Users users) {
    this.users = users;
    return this;
  }

  

  /**
  * Get users
  * @return users
  **/
  @Schema(description = "")
  public Users getUsers() {
    return users;
  }
  public void setUsers(Users users) {
    this.users = users;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TensorBoard tensorBoard = (TensorBoard) o;
    return Objects.equals(this.tensorBoardPK, tensorBoard.tensorBoardPK) &&
        Objects.equals(this.hdfsUserId, tensorBoard.hdfsUserId) &&
        Objects.equals(this.pid, tensorBoard.pid) &&
        Objects.equals(this.endpoint, tensorBoard.endpoint) &&
        Objects.equals(this.elasticId, tensorBoard.elasticId) &&
        Objects.equals(this.lastAccessed, tensorBoard.lastAccessed) &&
        Objects.equals(this.hdfsLogdir, tensorBoard.hdfsLogdir) &&
        Objects.equals(this.secret, tensorBoard.secret) &&
        Objects.equals(this.project, tensorBoard.project) &&
        Objects.equals(this.users, tensorBoard.users);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(tensorBoardPK, hdfsUserId, pid, endpoint, elasticId, lastAccessed, hdfsLogdir, secret, project, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TensorBoard {\n");
    
    sb.append("    tensorBoardPK: ").append(toIndentedString(tensorBoardPK)).append("\n");
    sb.append("    hdfsUserId: ").append(toIndentedString(hdfsUserId)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    elasticId: ").append(toIndentedString(elasticId)).append("\n");
    sb.append("    lastAccessed: ").append(toIndentedString(lastAccessed)).append("\n");
    sb.append("    hdfsLogdir: ").append(toIndentedString(hdfsLogdir)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
