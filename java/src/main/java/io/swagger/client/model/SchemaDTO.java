/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SchemaDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SchemaDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class SchemaDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<SchemaDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("contents")
  private String contents = null;

  @SerializedName("versions")
  private List<Integer> versions = null;
  public SchemaDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public SchemaDTO items(List<SchemaDTO> items) {
    this.items = items;
    return this;
  }

  public SchemaDTO addItemsItem(SchemaDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<SchemaDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<SchemaDTO> getItems() {
    return items;
  }
  public void setItems(List<SchemaDTO> items) {
    this.items = items;
  }
  public SchemaDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public SchemaDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public SchemaDTO contents(String contents) {
    this.contents = contents;
    return this;
  }

  

  /**
  * Get contents
  * @return contents
  **/
  @Schema(description = "")
  public String getContents() {
    return contents;
  }
  public void setContents(String contents) {
    this.contents = contents;
  }
  public SchemaDTO versions(List<Integer> versions) {
    this.versions = versions;
    return this;
  }

  public SchemaDTO addVersionsItem(Integer versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<Integer>();
    }
    this.versions.add(versionsItem);
    return this;
  }

  /**
  * Get versions
  * @return versions
  **/
  @Schema(description = "")
  public List<Integer> getVersions() {
    return versions;
  }
  public void setVersions(List<Integer> versions) {
    this.versions = versions;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchemaDTO schemaDTO = (SchemaDTO) o;
    return Objects.equals(this.href, schemaDTO.href) &&
        Objects.equals(this.items, schemaDTO.items) &&
        Objects.equals(this.count, schemaDTO.count) &&
        Objects.equals(this.name, schemaDTO.name) &&
        Objects.equals(this.contents, schemaDTO.contents) &&
        Objects.equals(this.versions, schemaDTO.versions);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, name, contents, versions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchemaDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
