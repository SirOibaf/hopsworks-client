/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SecretDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * SecretDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class SecretDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<SecretDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("secret")
  private String secret = null;

  @SerializedName("addedOn")
  private OffsetDateTime addedOn = null;
  /**
   * Gets or Sets visibility
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    PRIVATE("PRIVATE"),
    PROJECT("PROJECT");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VisibilityEnum fromValue(String text) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VisibilityEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("visibility")
  private VisibilityEnum visibility = null;

  @SerializedName("projectIdScope")
  private Integer projectIdScope = null;

  @SerializedName("owner")
  private String owner = null;
  public SecretDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public SecretDTO items(List<SecretDTO> items) {
    this.items = items;
    return this;
  }

  public SecretDTO addItemsItem(SecretDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<SecretDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<SecretDTO> getItems() {
    return items;
  }
  public void setItems(List<SecretDTO> items) {
    this.items = items;
  }
  public SecretDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public SecretDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public SecretDTO secret(String secret) {
    this.secret = secret;
    return this;
  }

  

  /**
  * Get secret
  * @return secret
  **/
  @Schema(description = "")
  public String getSecret() {
    return secret;
  }
  public void setSecret(String secret) {
    this.secret = secret;
  }
  public SecretDTO addedOn(OffsetDateTime addedOn) {
    this.addedOn = addedOn;
    return this;
  }

  

  /**
  * Get addedOn
  * @return addedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getAddedOn() {
    return addedOn;
  }
  public void setAddedOn(OffsetDateTime addedOn) {
    this.addedOn = addedOn;
  }
  public SecretDTO visibility(VisibilityEnum visibility) {
    this.visibility = visibility;
    return this;
  }

  

  /**
  * Get visibility
  * @return visibility
  **/
  @Schema(required = true, description = "")
  public VisibilityEnum getVisibility() {
    return visibility;
  }
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }
  public SecretDTO projectIdScope(Integer projectIdScope) {
    this.projectIdScope = projectIdScope;
    return this;
  }

  

  /**
  * Get projectIdScope
  * @return projectIdScope
  **/
  @Schema(description = "")
  public Integer getProjectIdScope() {
    return projectIdScope;
  }
  public void setProjectIdScope(Integer projectIdScope) {
    this.projectIdScope = projectIdScope;
  }
  public SecretDTO owner(String owner) {
    this.owner = owner;
    return this;
  }

  

  /**
  * Get owner
  * @return owner
  **/
  @Schema(description = "")
  public String getOwner() {
    return owner;
  }
  public void setOwner(String owner) {
    this.owner = owner;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecretDTO secretDTO = (SecretDTO) o;
    return Objects.equals(this.href, secretDTO.href) &&
        Objects.equals(this.items, secretDTO.items) &&
        Objects.equals(this.count, secretDTO.count) &&
        Objects.equals(this.name, secretDTO.name) &&
        Objects.equals(this.secret, secretDTO.secret) &&
        Objects.equals(this.addedOn, secretDTO.addedOn) &&
        Objects.equals(this.visibility, secretDTO.visibility) &&
        Objects.equals(this.projectIdScope, secretDTO.projectIdScope) &&
        Objects.equals(this.owner, secretDTO.owner);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, name, secret, addedOn, visibility, projectIdScope, owner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecretDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    addedOn: ").append(toIndentedString(addedOn)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    projectIdScope: ").append(toIndentedString(projectIdScope)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
