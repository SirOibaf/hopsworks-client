/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LibrarySearchDTO;
import io.swagger.client.model.LibraryVersionDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LibrarySearchDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class LibrarySearchDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<LibrarySearchDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("library")
  private String library = null;

  @SerializedName("channelUrl")
  private String channelUrl = null;

  @SerializedName("versions")
  private List<LibraryVersionDTO> versions = null;

  @SerializedName("status")
  private String status = null;
  public LibrarySearchDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public LibrarySearchDTO items(List<LibrarySearchDTO> items) {
    this.items = items;
    return this;
  }

  public LibrarySearchDTO addItemsItem(LibrarySearchDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<LibrarySearchDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<LibrarySearchDTO> getItems() {
    return items;
  }
  public void setItems(List<LibrarySearchDTO> items) {
    this.items = items;
  }
  public LibrarySearchDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public LibrarySearchDTO library(String library) {
    this.library = library;
    return this;
  }

  

  /**
  * Get library
  * @return library
  **/
  @Schema(description = "")
  public String getLibrary() {
    return library;
  }
  public void setLibrary(String library) {
    this.library = library;
  }
  public LibrarySearchDTO channelUrl(String channelUrl) {
    this.channelUrl = channelUrl;
    return this;
  }

  

  /**
  * Get channelUrl
  * @return channelUrl
  **/
  @Schema(description = "")
  public String getChannelUrl() {
    return channelUrl;
  }
  public void setChannelUrl(String channelUrl) {
    this.channelUrl = channelUrl;
  }
  public LibrarySearchDTO versions(List<LibraryVersionDTO> versions) {
    this.versions = versions;
    return this;
  }

  public LibrarySearchDTO addVersionsItem(LibraryVersionDTO versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<LibraryVersionDTO>();
    }
    this.versions.add(versionsItem);
    return this;
  }

  /**
  * Get versions
  * @return versions
  **/
  @Schema(description = "")
  public List<LibraryVersionDTO> getVersions() {
    return versions;
  }
  public void setVersions(List<LibraryVersionDTO> versions) {
    this.versions = versions;
  }
  public LibrarySearchDTO status(String status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LibrarySearchDTO librarySearchDTO = (LibrarySearchDTO) o;
    return Objects.equals(this.href, librarySearchDTO.href) &&
        Objects.equals(this.items, librarySearchDTO.items) &&
        Objects.equals(this.count, librarySearchDTO.count) &&
        Objects.equals(this.library, librarySearchDTO.library) &&
        Objects.equals(this.channelUrl, librarySearchDTO.channelUrl) &&
        Objects.equals(this.versions, librarySearchDTO.versions) &&
        Objects.equals(this.status, librarySearchDTO.status);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, library, channelUrl, versions, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LibrarySearchDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    library: ").append(toIndentedString(library)).append("\n");
    sb.append("    channelUrl: ").append(toIndentedString(channelUrl)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
