/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * DatapointDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class DatapointDTO {

  @SerializedName("datapointName")
  private String datapointName = null;

  @SerializedName("firstDimension")
  private Float firstDimension = null;

  @SerializedName("secondDimension")
  private Float secondDimension = null;
  public DatapointDTO datapointName(String datapointName) {
    this.datapointName = datapointName;
    return this;
  }

  

  /**
  * Get datapointName
  * @return datapointName
  **/
  @Schema(description = "")
  public String getDatapointName() {
    return datapointName;
  }
  public void setDatapointName(String datapointName) {
    this.datapointName = datapointName;
  }
  public DatapointDTO firstDimension(Float firstDimension) {
    this.firstDimension = firstDimension;
    return this;
  }

  

  /**
  * Get firstDimension
  * @return firstDimension
  **/
  @Schema(description = "")
  public Float getFirstDimension() {
    return firstDimension;
  }
  public void setFirstDimension(Float firstDimension) {
    this.firstDimension = firstDimension;
  }
  public DatapointDTO secondDimension(Float secondDimension) {
    this.secondDimension = secondDimension;
    return this;
  }

  

  /**
  * Get secondDimension
  * @return secondDimension
  **/
  @Schema(description = "")
  public Float getSecondDimension() {
    return secondDimension;
  }
  public void setSecondDimension(Float secondDimension) {
    this.secondDimension = secondDimension;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatapointDTO datapointDTO = (DatapointDTO) o;
    return Objects.equals(this.datapointName, datapointDTO.datapointName) &&
        Objects.equals(this.firstDimension, datapointDTO.firstDimension) &&
        Objects.equals(this.secondDimension, datapointDTO.secondDimension);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(datapointName, firstDimension, secondDimension);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatapointDTO {\n");
    
    sb.append("    datapointName: ").append(toIndentedString(datapointName)).append("\n");
    sb.append("    firstDimension: ").append(toIndentedString(firstDimension)).append("\n");
    sb.append("    secondDimension: ").append(toIndentedString(secondDimension)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
