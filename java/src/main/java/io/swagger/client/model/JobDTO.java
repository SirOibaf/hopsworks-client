/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExecutionDTO;
import io.swagger.client.model.JobConfiguration;
import io.swagger.client.model.JobDTO;
import io.swagger.client.model.UserDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * JobDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class JobDTO {

  @SerializedName("href")
  private String href = null;

  @SerializedName("items")
  private List<JobDTO> items = null;

  @SerializedName("count")
  private Long count = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("creationTime")
  private OffsetDateTime creationTime = null;

  @SerializedName("config")
  private JobConfiguration config = null;
  /**
   * Gets or Sets jobType
   */
  @JsonAdapter(JobTypeEnum.Adapter.class)
  public enum JobTypeEnum {
    YARN("YARN"),
    FLINK("FLINK"),
    SPARK("SPARK"),
    PYSPARK("PYSPARK"),
    BEAM_FLINK("BEAM_FLINK"),
    BEAM_SPARK("BEAM_SPARK"),
    ERASURE_CODING("ERASURE_CODING");

    private String value;

    JobTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static JobTypeEnum fromValue(String text) {
      for (JobTypeEnum b : JobTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<JobTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JobTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("jobType")
  private JobTypeEnum jobType = null;

  @SerializedName("creator")
  private UserDTO creator = null;

  @SerializedName("executions")
  private ExecutionDTO executions = null;
  public JobDTO href(String href) {
    this.href = href;
    return this;
  }

  

  /**
  * Get href
  * @return href
  **/
  @Schema(description = "")
  public String getHref() {
    return href;
  }
  public void setHref(String href) {
    this.href = href;
  }
  public JobDTO items(List<JobDTO> items) {
    this.items = items;
    return this;
  }

  public JobDTO addItemsItem(JobDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<JobDTO>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Get items
  * @return items
  **/
  @Schema(description = "")
  public List<JobDTO> getItems() {
    return items;
  }
  public void setItems(List<JobDTO> items) {
    this.items = items;
  }
  public JobDTO count(Long count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  public JobDTO id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public JobDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public JobDTO creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  

  /**
  * Get creationTime
  * @return creationTime
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }
  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }
  public JobDTO config(JobConfiguration config) {
    this.config = config;
    return this;
  }

  

  /**
  * Get config
  * @return config
  **/
  @Schema(description = "")
  public JobConfiguration getConfig() {
    return config;
  }
  public void setConfig(JobConfiguration config) {
    this.config = config;
  }
  public JobDTO jobType(JobTypeEnum jobType) {
    this.jobType = jobType;
    return this;
  }

  

  /**
  * Get jobType
  * @return jobType
  **/
  @Schema(description = "")
  public JobTypeEnum getJobType() {
    return jobType;
  }
  public void setJobType(JobTypeEnum jobType) {
    this.jobType = jobType;
  }
  public JobDTO creator(UserDTO creator) {
    this.creator = creator;
    return this;
  }

  

  /**
  * Get creator
  * @return creator
  **/
  @Schema(description = "")
  public UserDTO getCreator() {
    return creator;
  }
  public void setCreator(UserDTO creator) {
    this.creator = creator;
  }
  public JobDTO executions(ExecutionDTO executions) {
    this.executions = executions;
    return this;
  }

  

  /**
  * Get executions
  * @return executions
  **/
  @Schema(description = "")
  public ExecutionDTO getExecutions() {
    return executions;
  }
  public void setExecutions(ExecutionDTO executions) {
    this.executions = executions;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDTO jobDTO = (JobDTO) o;
    return Objects.equals(this.href, jobDTO.href) &&
        Objects.equals(this.items, jobDTO.items) &&
        Objects.equals(this.count, jobDTO.count) &&
        Objects.equals(this.id, jobDTO.id) &&
        Objects.equals(this.name, jobDTO.name) &&
        Objects.equals(this.creationTime, jobDTO.creationTime) &&
        Objects.equals(this.config, jobDTO.config) &&
        Objects.equals(this.jobType, jobDTO.jobType) &&
        Objects.equals(this.creator, jobDTO.creator) &&
        Objects.equals(this.executions, jobDTO.executions);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(href, items, count, id, name, creationTime, config, jobType, creator, executions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDTO {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    executions: ").append(toIndentedString(executions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
