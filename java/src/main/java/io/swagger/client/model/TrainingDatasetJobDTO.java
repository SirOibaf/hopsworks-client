/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TrainingDatasetJobDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-28T02:09:19.386+01:00[Europe/Stockholm]")public class TrainingDatasetJobDTO {

  @SerializedName("features")
  private List<String> features = null;

  @SerializedName("sqlQuery")
  private String sqlQuery = null;

  @SerializedName("trainingDataset")
  private String trainingDataset = null;

  @SerializedName("featuregroupsVersionDict")
  private String featuregroupsVersionDict = null;

  @SerializedName("joinKey")
  private String joinKey = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("featurestore")
  private String featurestore = null;

  @SerializedName("dataFormat")
  private String dataFormat = null;

  @SerializedName("trainingDatasetVersion")
  private Integer trainingDatasetVersion = null;

  @SerializedName("overwrite")
  private Boolean overwrite = null;

  @SerializedName("jobs")
  private List<String> jobs = null;

  @SerializedName("online")
  private Boolean online = null;

  @SerializedName("descriptiveStatistics")
  private Boolean descriptiveStatistics = null;

  @SerializedName("featureCorrelation")
  private Boolean featureCorrelation = null;

  @SerializedName("featureHistograms")
  private Boolean featureHistograms = null;

  @SerializedName("clusterAnalysis")
  private Boolean clusterAnalysis = null;

  @SerializedName("statColumns")
  private List<String> statColumns = null;

  @SerializedName("numBins")
  private Integer numBins = null;

  @SerializedName("correlationMethod")
  private String correlationMethod = null;

  @SerializedName("numClusters")
  private Integer numClusters = null;

  @SerializedName("fixed")
  private Boolean fixed = null;

  @SerializedName("sink")
  private String sink = null;

  @SerializedName("amCores")
  private Integer amCores = null;

  @SerializedName("amMemory")
  private Integer amMemory = null;

  @SerializedName("executorCores")
  private Integer executorCores = null;

  @SerializedName("executorMemory")
  private Integer executorMemory = null;

  @SerializedName("maxExecutors")
  private Integer maxExecutors = null;

  @SerializedName("path")
  private String path = null;
  public TrainingDatasetJobDTO features(List<String> features) {
    this.features = features;
    return this;
  }

  public TrainingDatasetJobDTO addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<String>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
  * Get features
  * @return features
  **/
  @Schema(description = "")
  public List<String> getFeatures() {
    return features;
  }
  public void setFeatures(List<String> features) {
    this.features = features;
  }
  public TrainingDatasetJobDTO sqlQuery(String sqlQuery) {
    this.sqlQuery = sqlQuery;
    return this;
  }

  

  /**
  * Get sqlQuery
  * @return sqlQuery
  **/
  @Schema(description = "")
  public String getSqlQuery() {
    return sqlQuery;
  }
  public void setSqlQuery(String sqlQuery) {
    this.sqlQuery = sqlQuery;
  }
  public TrainingDatasetJobDTO trainingDataset(String trainingDataset) {
    this.trainingDataset = trainingDataset;
    return this;
  }

  

  /**
  * Get trainingDataset
  * @return trainingDataset
  **/
  @Schema(description = "")
  public String getTrainingDataset() {
    return trainingDataset;
  }
  public void setTrainingDataset(String trainingDataset) {
    this.trainingDataset = trainingDataset;
  }
  public TrainingDatasetJobDTO featuregroupsVersionDict(String featuregroupsVersionDict) {
    this.featuregroupsVersionDict = featuregroupsVersionDict;
    return this;
  }

  

  /**
  * Get featuregroupsVersionDict
  * @return featuregroupsVersionDict
  **/
  @Schema(description = "")
  public String getFeaturegroupsVersionDict() {
    return featuregroupsVersionDict;
  }
  public void setFeaturegroupsVersionDict(String featuregroupsVersionDict) {
    this.featuregroupsVersionDict = featuregroupsVersionDict;
  }
  public TrainingDatasetJobDTO joinKey(String joinKey) {
    this.joinKey = joinKey;
    return this;
  }

  

  /**
  * Get joinKey
  * @return joinKey
  **/
  @Schema(description = "")
  public String getJoinKey() {
    return joinKey;
  }
  public void setJoinKey(String joinKey) {
    this.joinKey = joinKey;
  }
  public TrainingDatasetJobDTO description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public TrainingDatasetJobDTO featurestore(String featurestore) {
    this.featurestore = featurestore;
    return this;
  }

  

  /**
  * Get featurestore
  * @return featurestore
  **/
  @Schema(description = "")
  public String getFeaturestore() {
    return featurestore;
  }
  public void setFeaturestore(String featurestore) {
    this.featurestore = featurestore;
  }
  public TrainingDatasetJobDTO dataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
    return this;
  }

  

  /**
  * Get dataFormat
  * @return dataFormat
  **/
  @Schema(description = "")
  public String getDataFormat() {
    return dataFormat;
  }
  public void setDataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
  }
  public TrainingDatasetJobDTO trainingDatasetVersion(Integer trainingDatasetVersion) {
    this.trainingDatasetVersion = trainingDatasetVersion;
    return this;
  }

  

  /**
  * Get trainingDatasetVersion
  * @return trainingDatasetVersion
  **/
  @Schema(description = "")
  public Integer getTrainingDatasetVersion() {
    return trainingDatasetVersion;
  }
  public void setTrainingDatasetVersion(Integer trainingDatasetVersion) {
    this.trainingDatasetVersion = trainingDatasetVersion;
  }
  public TrainingDatasetJobDTO overwrite(Boolean overwrite) {
    this.overwrite = overwrite;
    return this;
  }

  

  /**
  * Get overwrite
  * @return overwrite
  **/
  @Schema(description = "")
  public Boolean isOverwrite() {
    return overwrite;
  }
  public void setOverwrite(Boolean overwrite) {
    this.overwrite = overwrite;
  }
  public TrainingDatasetJobDTO jobs(List<String> jobs) {
    this.jobs = jobs;
    return this;
  }

  public TrainingDatasetJobDTO addJobsItem(String jobsItem) {
    if (this.jobs == null) {
      this.jobs = new ArrayList<String>();
    }
    this.jobs.add(jobsItem);
    return this;
  }

  /**
  * Get jobs
  * @return jobs
  **/
  @Schema(description = "")
  public List<String> getJobs() {
    return jobs;
  }
  public void setJobs(List<String> jobs) {
    this.jobs = jobs;
  }
  public TrainingDatasetJobDTO online(Boolean online) {
    this.online = online;
    return this;
  }

  

  /**
  * Get online
  * @return online
  **/
  @Schema(description = "")
  public Boolean isOnline() {
    return online;
  }
  public void setOnline(Boolean online) {
    this.online = online;
  }
  public TrainingDatasetJobDTO descriptiveStatistics(Boolean descriptiveStatistics) {
    this.descriptiveStatistics = descriptiveStatistics;
    return this;
  }

  

  /**
  * Get descriptiveStatistics
  * @return descriptiveStatistics
  **/
  @Schema(description = "")
  public Boolean isDescriptiveStatistics() {
    return descriptiveStatistics;
  }
  public void setDescriptiveStatistics(Boolean descriptiveStatistics) {
    this.descriptiveStatistics = descriptiveStatistics;
  }
  public TrainingDatasetJobDTO featureCorrelation(Boolean featureCorrelation) {
    this.featureCorrelation = featureCorrelation;
    return this;
  }

  

  /**
  * Get featureCorrelation
  * @return featureCorrelation
  **/
  @Schema(description = "")
  public Boolean isFeatureCorrelation() {
    return featureCorrelation;
  }
  public void setFeatureCorrelation(Boolean featureCorrelation) {
    this.featureCorrelation = featureCorrelation;
  }
  public TrainingDatasetJobDTO featureHistograms(Boolean featureHistograms) {
    this.featureHistograms = featureHistograms;
    return this;
  }

  

  /**
  * Get featureHistograms
  * @return featureHistograms
  **/
  @Schema(description = "")
  public Boolean isFeatureHistograms() {
    return featureHistograms;
  }
  public void setFeatureHistograms(Boolean featureHistograms) {
    this.featureHistograms = featureHistograms;
  }
  public TrainingDatasetJobDTO clusterAnalysis(Boolean clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
    return this;
  }

  

  /**
  * Get clusterAnalysis
  * @return clusterAnalysis
  **/
  @Schema(description = "")
  public Boolean isClusterAnalysis() {
    return clusterAnalysis;
  }
  public void setClusterAnalysis(Boolean clusterAnalysis) {
    this.clusterAnalysis = clusterAnalysis;
  }
  public TrainingDatasetJobDTO statColumns(List<String> statColumns) {
    this.statColumns = statColumns;
    return this;
  }

  public TrainingDatasetJobDTO addStatColumnsItem(String statColumnsItem) {
    if (this.statColumns == null) {
      this.statColumns = new ArrayList<String>();
    }
    this.statColumns.add(statColumnsItem);
    return this;
  }

  /**
  * Get statColumns
  * @return statColumns
  **/
  @Schema(description = "")
  public List<String> getStatColumns() {
    return statColumns;
  }
  public void setStatColumns(List<String> statColumns) {
    this.statColumns = statColumns;
  }
  public TrainingDatasetJobDTO numBins(Integer numBins) {
    this.numBins = numBins;
    return this;
  }

  

  /**
  * Get numBins
  * @return numBins
  **/
  @Schema(description = "")
  public Integer getNumBins() {
    return numBins;
  }
  public void setNumBins(Integer numBins) {
    this.numBins = numBins;
  }
  public TrainingDatasetJobDTO correlationMethod(String correlationMethod) {
    this.correlationMethod = correlationMethod;
    return this;
  }

  

  /**
  * Get correlationMethod
  * @return correlationMethod
  **/
  @Schema(description = "")
  public String getCorrelationMethod() {
    return correlationMethod;
  }
  public void setCorrelationMethod(String correlationMethod) {
    this.correlationMethod = correlationMethod;
  }
  public TrainingDatasetJobDTO numClusters(Integer numClusters) {
    this.numClusters = numClusters;
    return this;
  }

  

  /**
  * Get numClusters
  * @return numClusters
  **/
  @Schema(description = "")
  public Integer getNumClusters() {
    return numClusters;
  }
  public void setNumClusters(Integer numClusters) {
    this.numClusters = numClusters;
  }
  public TrainingDatasetJobDTO fixed(Boolean fixed) {
    this.fixed = fixed;
    return this;
  }

  

  /**
  * Get fixed
  * @return fixed
  **/
  @Schema(description = "")
  public Boolean isFixed() {
    return fixed;
  }
  public void setFixed(Boolean fixed) {
    this.fixed = fixed;
  }
  public TrainingDatasetJobDTO sink(String sink) {
    this.sink = sink;
    return this;
  }

  

  /**
  * Get sink
  * @return sink
  **/
  @Schema(description = "")
  public String getSink() {
    return sink;
  }
  public void setSink(String sink) {
    this.sink = sink;
  }
  public TrainingDatasetJobDTO amCores(Integer amCores) {
    this.amCores = amCores;
    return this;
  }

  

  /**
  * Get amCores
  * @return amCores
  **/
  @Schema(description = "")
  public Integer getAmCores() {
    return amCores;
  }
  public void setAmCores(Integer amCores) {
    this.amCores = amCores;
  }
  public TrainingDatasetJobDTO amMemory(Integer amMemory) {
    this.amMemory = amMemory;
    return this;
  }

  

  /**
  * Get amMemory
  * @return amMemory
  **/
  @Schema(description = "")
  public Integer getAmMemory() {
    return amMemory;
  }
  public void setAmMemory(Integer amMemory) {
    this.amMemory = amMemory;
  }
  public TrainingDatasetJobDTO executorCores(Integer executorCores) {
    this.executorCores = executorCores;
    return this;
  }

  

  /**
  * Get executorCores
  * @return executorCores
  **/
  @Schema(description = "")
  public Integer getExecutorCores() {
    return executorCores;
  }
  public void setExecutorCores(Integer executorCores) {
    this.executorCores = executorCores;
  }
  public TrainingDatasetJobDTO executorMemory(Integer executorMemory) {
    this.executorMemory = executorMemory;
    return this;
  }

  

  /**
  * Get executorMemory
  * @return executorMemory
  **/
  @Schema(description = "")
  public Integer getExecutorMemory() {
    return executorMemory;
  }
  public void setExecutorMemory(Integer executorMemory) {
    this.executorMemory = executorMemory;
  }
  public TrainingDatasetJobDTO maxExecutors(Integer maxExecutors) {
    this.maxExecutors = maxExecutors;
    return this;
  }

  

  /**
  * Get maxExecutors
  * @return maxExecutors
  **/
  @Schema(description = "")
  public Integer getMaxExecutors() {
    return maxExecutors;
  }
  public void setMaxExecutors(Integer maxExecutors) {
    this.maxExecutors = maxExecutors;
  }
  public TrainingDatasetJobDTO path(String path) {
    this.path = path;
    return this;
  }

  

  /**
  * Get path
  * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }
  public void setPath(String path) {
    this.path = path;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrainingDatasetJobDTO trainingDatasetJobDTO = (TrainingDatasetJobDTO) o;
    return Objects.equals(this.features, trainingDatasetJobDTO.features) &&
        Objects.equals(this.sqlQuery, trainingDatasetJobDTO.sqlQuery) &&
        Objects.equals(this.trainingDataset, trainingDatasetJobDTO.trainingDataset) &&
        Objects.equals(this.featuregroupsVersionDict, trainingDatasetJobDTO.featuregroupsVersionDict) &&
        Objects.equals(this.joinKey, trainingDatasetJobDTO.joinKey) &&
        Objects.equals(this.description, trainingDatasetJobDTO.description) &&
        Objects.equals(this.featurestore, trainingDatasetJobDTO.featurestore) &&
        Objects.equals(this.dataFormat, trainingDatasetJobDTO.dataFormat) &&
        Objects.equals(this.trainingDatasetVersion, trainingDatasetJobDTO.trainingDatasetVersion) &&
        Objects.equals(this.overwrite, trainingDatasetJobDTO.overwrite) &&
        Objects.equals(this.jobs, trainingDatasetJobDTO.jobs) &&
        Objects.equals(this.online, trainingDatasetJobDTO.online) &&
        Objects.equals(this.descriptiveStatistics, trainingDatasetJobDTO.descriptiveStatistics) &&
        Objects.equals(this.featureCorrelation, trainingDatasetJobDTO.featureCorrelation) &&
        Objects.equals(this.featureHistograms, trainingDatasetJobDTO.featureHistograms) &&
        Objects.equals(this.clusterAnalysis, trainingDatasetJobDTO.clusterAnalysis) &&
        Objects.equals(this.statColumns, trainingDatasetJobDTO.statColumns) &&
        Objects.equals(this.numBins, trainingDatasetJobDTO.numBins) &&
        Objects.equals(this.correlationMethod, trainingDatasetJobDTO.correlationMethod) &&
        Objects.equals(this.numClusters, trainingDatasetJobDTO.numClusters) &&
        Objects.equals(this.fixed, trainingDatasetJobDTO.fixed) &&
        Objects.equals(this.sink, trainingDatasetJobDTO.sink) &&
        Objects.equals(this.amCores, trainingDatasetJobDTO.amCores) &&
        Objects.equals(this.amMemory, trainingDatasetJobDTO.amMemory) &&
        Objects.equals(this.executorCores, trainingDatasetJobDTO.executorCores) &&
        Objects.equals(this.executorMemory, trainingDatasetJobDTO.executorMemory) &&
        Objects.equals(this.maxExecutors, trainingDatasetJobDTO.maxExecutors) &&
        Objects.equals(this.path, trainingDatasetJobDTO.path);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(features, sqlQuery, trainingDataset, featuregroupsVersionDict, joinKey, description, featurestore, dataFormat, trainingDatasetVersion, overwrite, jobs, online, descriptiveStatistics, featureCorrelation, featureHistograms, clusterAnalysis, statColumns, numBins, correlationMethod, numClusters, fixed, sink, amCores, amMemory, executorCores, executorMemory, maxExecutors, path);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrainingDatasetJobDTO {\n");
    
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    sqlQuery: ").append(toIndentedString(sqlQuery)).append("\n");
    sb.append("    trainingDataset: ").append(toIndentedString(trainingDataset)).append("\n");
    sb.append("    featuregroupsVersionDict: ").append(toIndentedString(featuregroupsVersionDict)).append("\n");
    sb.append("    joinKey: ").append(toIndentedString(joinKey)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    featurestore: ").append(toIndentedString(featurestore)).append("\n");
    sb.append("    dataFormat: ").append(toIndentedString(dataFormat)).append("\n");
    sb.append("    trainingDatasetVersion: ").append(toIndentedString(trainingDatasetVersion)).append("\n");
    sb.append("    overwrite: ").append(toIndentedString(overwrite)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("    descriptiveStatistics: ").append(toIndentedString(descriptiveStatistics)).append("\n");
    sb.append("    featureCorrelation: ").append(toIndentedString(featureCorrelation)).append("\n");
    sb.append("    featureHistograms: ").append(toIndentedString(featureHistograms)).append("\n");
    sb.append("    clusterAnalysis: ").append(toIndentedString(clusterAnalysis)).append("\n");
    sb.append("    statColumns: ").append(toIndentedString(statColumns)).append("\n");
    sb.append("    numBins: ").append(toIndentedString(numBins)).append("\n");
    sb.append("    correlationMethod: ").append(toIndentedString(correlationMethod)).append("\n");
    sb.append("    numClusters: ").append(toIndentedString(numClusters)).append("\n");
    sb.append("    fixed: ").append(toIndentedString(fixed)).append("\n");
    sb.append("    sink: ").append(toIndentedString(sink)).append("\n");
    sb.append("    amCores: ").append(toIndentedString(amCores)).append("\n");
    sb.append("    amMemory: ").append(toIndentedString(amMemory)).append("\n");
    sb.append("    executorCores: ").append(toIndentedString(executorCores)).append("\n");
    sb.append("    executorMemory: ").append(toIndentedString(executorMemory)).append("\n");
    sb.append("    maxExecutors: ").append(toIndentedString(maxExecutors)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
