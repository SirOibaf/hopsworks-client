/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.FeaturestoreStorageConnectorDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StorageConnectorServiceApi
 */
@Ignore
public class StorageConnectorServiceApiTest {

    private final StorageConnectorServiceApi api = new StorageConnectorServiceApi();

    /**
     * Create a new storage connector for the feature store
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNewStorageConnectorWithTypeTest() throws ApiException {
        String connectorType = null;
        Integer featurestoreId = null;
        Integer projectId = null;
        FeaturestoreStorageConnectorDTO body = null;
        FeaturestoreStorageConnectorDTO response = api.createNewStorageConnectorWithType(connectorType, featurestoreId, projectId, body);

        // TODO: test validations
    }
    /**
     * Delete storage connector with a specific id and type from a featurestore
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStorageConnectorWithTypeAndIdTest() throws ApiException {
        String connectorType = null;
        Integer connectorId = null;
        Integer featurestoreId = null;
        Integer projectId = null;
        FeaturestoreStorageConnectorDTO response = api.deleteStorageConnectorWithTypeAndId(connectorType, connectorId, featurestoreId, projectId);

        // TODO: test validations
    }
    /**
     * Get online featurestore storage connector for this feature store
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOnlineFeaturestoreStorageConnectorTest() throws ApiException {
        Integer featurestoreId = null;
        Integer projectId = null;
        FeaturestoreStorageConnectorDTO response = api.getOnlineFeaturestoreStorageConnector(featurestoreId, projectId);

        // TODO: test validations
    }
    /**
     * Get a storage connector with a specific id and type from a featurestore
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStorageConnectorWithIdTest() throws ApiException {
        String connectorType = null;
        Integer connectorId = null;
        Integer featurestoreId = null;
        Integer projectId = null;
        FeaturestoreStorageConnectorDTO response = api.getStorageConnectorWithId(connectorType, connectorId, featurestoreId, projectId);

        // TODO: test validations
    }
    /**
     * Get all storage connectors of a feature store
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStorageConnectorsTest() throws ApiException {
        Integer featurestoreId = null;
        Integer projectId = null;
        List<FeaturestoreStorageConnectorDTO> response = api.getStorageConnectors(featurestoreId, projectId);

        // TODO: test validations
    }
    /**
     * Get all storage connectors of a specific type of a feature store
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStorageConnectorsOfTypeTest() throws ApiException {
        String connectorType = null;
        Integer featurestoreId = null;
        Integer projectId = null;
        List<FeaturestoreStorageConnectorDTO> response = api.getStorageConnectorsOfType(connectorType, featurestoreId, projectId);

        // TODO: test validations
    }
    /**
     * Get a storage connector with a specific id and type from a featurestore
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateStorageConnectorWithIdTest() throws ApiException {
        String connectorType = null;
        Integer connectorId = null;
        Integer featurestoreId = null;
        Integer projectId = null;
        FeaturestoreStorageConnectorDTO body = null;
        FeaturestoreStorageConnectorDTO response = api.updateStorageConnectorWithId(connectorType, connectorId, featurestoreId, projectId, body);

        // TODO: test validations
    }
}
