/*
 * Hopsworks api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.io.File;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetadataServiceApi
 */
@Ignore
public class MetadataServiceApiTest {

    private final MetadataServiceApi api = new MetadataServiceApi();

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addMetadataWithSchemaTest() throws ApiException {
        String body = null;
        api.addMetadataWithSchema(body);

        // TODO: test validations
    }
    /**
     * Create or Update a schemaless metadata for a path.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attachSchemalessMetadataTest() throws ApiException {
        String xattrName = null;
        String path = null;
        String body = null;
        api.attachSchemalessMetadata(xattrName, path, body);

        // TODO: test validations
    }
    /**
     * Delete the schemaless metadata attached to a path.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachSchemalessMetadataTest() throws ApiException {
        String xattrName = null;
        String path = null;
        api.detachSchemalessMetadata(xattrName, path);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachTemplateFromInodeTest() throws ApiException {
        Long inodeid = null;
        Integer templateid = null;
        api.detachTemplateFromInode(inodeid, templateid);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchAvailableTemplatesForInodeTest() throws ApiException {
        Long inodeid = null;
        api.fetchAvailableTemplatesForInode(inodeid);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMetadataTest() throws ApiException {
        Long inodepid = null;
        String inodename = null;
        Integer tableid = null;
        api.fetchMetadata(inodepid, inodename, tableid);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMetadataCompactTest() throws ApiException {
        Long inodepid = null;
        api.fetchMetadataCompact(inodepid);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTemplateTest() throws ApiException {
        Integer templateid = null;
        String sender = null;
        api.fetchTemplate(templateid, sender);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTemplatesforInodeTest() throws ApiException {
        Long inodeid = null;
        api.fetchTemplatesforInode(inodeid);

        // TODO: test validations
    }
    /**
     * Get the schemaless metadata attached to a path.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSchemalessMetadataTest() throws ApiException {
        String xattrName = null;
        String path = null;
        api.getSchemalessMetadata(xattrName, path);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeMetadataWithSchemaTest() throws ApiException {
        String body = null;
        api.removeMetadataWithSchema(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testMethodTest() throws ApiException {
        api.testMethod();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMetadataWithSchemaTest() throws ApiException {
        String body = null;
        api.updateMetadataWithSchema(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadMethodTest() throws ApiException {
        File file = null;
        String flowChunkNumber = null;
        String flowChunkSize = null;
        String flowCurrentChunkSize = null;
        String flowFilename = null;
        String flowIdentifier = null;
        String flowRelativePath = null;
        String flowTotalChunks = null;
        String flowTotalSize = null;
        api.uploadMethod(file, flowChunkNumber, flowChunkSize, flowCurrentChunkSize, flowFilename, flowIdentifier, flowRelativePath, flowTotalChunks, flowTotalSize);

        // TODO: test validations
    }
}
