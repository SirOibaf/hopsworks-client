# coding: utf-8

"""
    Hopsworks api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.1.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class FeaturestoreClientSettingsDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'featurestore_statistics_max_correlations': 'int',
        'featurestore_regex': 'str',
        'storage_connector_name_max_length': 'int',
        'storage_connector_description_max_length': 'int',
        'jdbc_storage_connector_connectionstring_max_length': 'int',
        'jdbc_storage_connector_arguments_max_length': 'int',
        's3_storage_connector_bucket_max_length': 'int',
        's3_storage_connector_accesskey_max_length': 'int',
        's3_storage_connector_secretkey_max_length': 'int',
        's3_iam_role': 'bool',
        'cached_featuregroup_name_max_length': 'int',
        'cached_featuregroup_description_max_length': 'int',
        'cached_featuregroup_feature_name_max_length': 'int',
        'cached_featuregroup_feature_description_max_length': 'int',
        'on_demand_featuregroup_name_max_length': 'int',
        'on_demand_featuregroup_description_max_length': 'int',
        'on_demand_featuregroup_feature_name_max_length': 'int',
        'on_demand_featuregroup_feature_description_max_length': 'int',
        'on_demand_featuregroup_sql_query_max_length': 'int',
        'training_dataset_data_formats': 'list[str]',
        'external_training_dataset_name_max_length': 'int',
        'hopsfs_training_dataset_name_max_length': 'int',
        'training_dataset_feature_name_max_length': 'int',
        'training_dataset_feature_description_max_length': 'int',
        'on_demand_featuregroup_type': 'str',
        'cached_featuregroup_type': 'str',
        'jdbc_connector_type': 'str',
        'hopsfs_connector_type': 'str',
        's3_connector_type': 'str',
        'cached_featuregroup_dto_type': 'str',
        'on_demand_featuregroup_dto_type': 'str',
        'hopsfs_training_dataset_type': 'str',
        'external_training_dataset_type': 'str',
        'hopsfs_training_dataset_dto_type': 'str',
        'external_training_dataset_dto_type': 'str',
        'training_dataset_description_max_length': 'int',
        's3_connector_dto_type': 'str',
        'jdbc_connector_dto_type': 'str',
        'hopsfs_connector_dto_type': 'str',
        'featuregroup_type': 'str',
        'training_dataset_type': 'str',
        'suggested_hive_feature_types': 'list[str]',
        'featurestore_util4j_main_class': 'str',
        'featurestore_util4j_args_dataset': 'str',
        'featurestore_util_python_main_class': 'str',
        'featurestore_util4j_executable': 'str',
        'featurestore_util_python_executable': 'str',
        's3_bucket_training_datasets_folder': 'str',
        'feature_import_connectors': 'list[str]',
        'online_featurestore_enabled': 'bool',
        'suggested_mysql_feature_types': 'list[str]'
    }

    attribute_map = {
        'featurestore_statistics_max_correlations': 'featurestoreStatisticsMaxCorrelations',
        'featurestore_regex': 'featurestoreRegex',
        'storage_connector_name_max_length': 'storageConnectorNameMaxLength',
        'storage_connector_description_max_length': 'storageConnectorDescriptionMaxLength',
        'jdbc_storage_connector_connectionstring_max_length': 'jdbcStorageConnectorConnectionstringMaxLength',
        'jdbc_storage_connector_arguments_max_length': 'jdbcStorageConnectorArgumentsMaxLength',
        's3_storage_connector_bucket_max_length': 's3StorageConnectorBucketMaxLength',
        's3_storage_connector_accesskey_max_length': 's3StorageConnectorAccesskeyMaxLength',
        's3_storage_connector_secretkey_max_length': 's3StorageConnectorSecretkeyMaxLength',
        's3_iam_role': 's3IAMRole',
        'cached_featuregroup_name_max_length': 'cachedFeaturegroupNameMaxLength',
        'cached_featuregroup_description_max_length': 'cachedFeaturegroupDescriptionMaxLength',
        'cached_featuregroup_feature_name_max_length': 'cachedFeaturegroupFeatureNameMaxLength',
        'cached_featuregroup_feature_description_max_length': 'cachedFeaturegroupFeatureDescriptionMaxLength',
        'on_demand_featuregroup_name_max_length': 'onDemandFeaturegroupNameMaxLength',
        'on_demand_featuregroup_description_max_length': 'onDemandFeaturegroupDescriptionMaxLength',
        'on_demand_featuregroup_feature_name_max_length': 'onDemandFeaturegroupFeatureNameMaxLength',
        'on_demand_featuregroup_feature_description_max_length': 'onDemandFeaturegroupFeatureDescriptionMaxLength',
        'on_demand_featuregroup_sql_query_max_length': 'onDemandFeaturegroupSqlQueryMaxLength',
        'training_dataset_data_formats': 'trainingDatasetDataFormats',
        'external_training_dataset_name_max_length': 'externalTrainingDatasetNameMaxLength',
        'hopsfs_training_dataset_name_max_length': 'hopsfsTrainingDatasetNameMaxLength',
        'training_dataset_feature_name_max_length': 'trainingDatasetFeatureNameMaxLength',
        'training_dataset_feature_description_max_length': 'trainingDatasetFeatureDescriptionMaxLength',
        'on_demand_featuregroup_type': 'onDemandFeaturegroupType',
        'cached_featuregroup_type': 'cachedFeaturegroupType',
        'jdbc_connector_type': 'jdbcConnectorType',
        'hopsfs_connector_type': 'hopsfsConnectorType',
        's3_connector_type': 's3ConnectorType',
        'cached_featuregroup_dto_type': 'cachedFeaturegroupDtoType',
        'on_demand_featuregroup_dto_type': 'onDemandFeaturegroupDtoType',
        'hopsfs_training_dataset_type': 'hopsfsTrainingDatasetType',
        'external_training_dataset_type': 'externalTrainingDatasetType',
        'hopsfs_training_dataset_dto_type': 'hopsfsTrainingDatasetDtoType',
        'external_training_dataset_dto_type': 'externalTrainingDatasetDtoType',
        'training_dataset_description_max_length': 'trainingDatasetDescriptionMaxLength',
        's3_connector_dto_type': 's3ConnectorDtoType',
        'jdbc_connector_dto_type': 'jdbcConnectorDtoType',
        'hopsfs_connector_dto_type': 'hopsfsConnectorDtoType',
        'featuregroup_type': 'featuregroupType',
        'training_dataset_type': 'trainingDatasetType',
        'suggested_hive_feature_types': 'suggestedHiveFeatureTypes',
        'featurestore_util4j_main_class': 'featurestoreUtil4jMainClass',
        'featurestore_util4j_args_dataset': 'featurestoreUtil4jArgsDataset',
        'featurestore_util_python_main_class': 'featurestoreUtilPythonMainClass',
        'featurestore_util4j_executable': 'featurestoreUtil4jExecutable',
        'featurestore_util_python_executable': 'featurestoreUtilPythonExecutable',
        's3_bucket_training_datasets_folder': 's3BucketTrainingDatasetsFolder',
        'feature_import_connectors': 'featureImportConnectors',
        'online_featurestore_enabled': 'onlineFeaturestoreEnabled',
        'suggested_mysql_feature_types': 'suggestedMysqlFeatureTypes'
    }

    def __init__(self, featurestore_statistics_max_correlations=None, featurestore_regex=None, storage_connector_name_max_length=None, storage_connector_description_max_length=None, jdbc_storage_connector_connectionstring_max_length=None, jdbc_storage_connector_arguments_max_length=None, s3_storage_connector_bucket_max_length=None, s3_storage_connector_accesskey_max_length=None, s3_storage_connector_secretkey_max_length=None, s3_iam_role=None, cached_featuregroup_name_max_length=None, cached_featuregroup_description_max_length=None, cached_featuregroup_feature_name_max_length=None, cached_featuregroup_feature_description_max_length=None, on_demand_featuregroup_name_max_length=None, on_demand_featuregroup_description_max_length=None, on_demand_featuregroup_feature_name_max_length=None, on_demand_featuregroup_feature_description_max_length=None, on_demand_featuregroup_sql_query_max_length=None, training_dataset_data_formats=None, external_training_dataset_name_max_length=None, hopsfs_training_dataset_name_max_length=None, training_dataset_feature_name_max_length=None, training_dataset_feature_description_max_length=None, on_demand_featuregroup_type=None, cached_featuregroup_type=None, jdbc_connector_type=None, hopsfs_connector_type=None, s3_connector_type=None, cached_featuregroup_dto_type=None, on_demand_featuregroup_dto_type=None, hopsfs_training_dataset_type=None, external_training_dataset_type=None, hopsfs_training_dataset_dto_type=None, external_training_dataset_dto_type=None, training_dataset_description_max_length=None, s3_connector_dto_type=None, jdbc_connector_dto_type=None, hopsfs_connector_dto_type=None, featuregroup_type=None, training_dataset_type=None, suggested_hive_feature_types=None, featurestore_util4j_main_class=None, featurestore_util4j_args_dataset=None, featurestore_util_python_main_class=None, featurestore_util4j_executable=None, featurestore_util_python_executable=None, s3_bucket_training_datasets_folder=None, feature_import_connectors=None, online_featurestore_enabled=None, suggested_mysql_feature_types=None):  # noqa: E501
        """FeaturestoreClientSettingsDTO - a model defined in Swagger"""  # noqa: E501
        self._featurestore_statistics_max_correlations = None
        self._featurestore_regex = None
        self._storage_connector_name_max_length = None
        self._storage_connector_description_max_length = None
        self._jdbc_storage_connector_connectionstring_max_length = None
        self._jdbc_storage_connector_arguments_max_length = None
        self._s3_storage_connector_bucket_max_length = None
        self._s3_storage_connector_accesskey_max_length = None
        self._s3_storage_connector_secretkey_max_length = None
        self._s3_iam_role = None
        self._cached_featuregroup_name_max_length = None
        self._cached_featuregroup_description_max_length = None
        self._cached_featuregroup_feature_name_max_length = None
        self._cached_featuregroup_feature_description_max_length = None
        self._on_demand_featuregroup_name_max_length = None
        self._on_demand_featuregroup_description_max_length = None
        self._on_demand_featuregroup_feature_name_max_length = None
        self._on_demand_featuregroup_feature_description_max_length = None
        self._on_demand_featuregroup_sql_query_max_length = None
        self._training_dataset_data_formats = None
        self._external_training_dataset_name_max_length = None
        self._hopsfs_training_dataset_name_max_length = None
        self._training_dataset_feature_name_max_length = None
        self._training_dataset_feature_description_max_length = None
        self._on_demand_featuregroup_type = None
        self._cached_featuregroup_type = None
        self._jdbc_connector_type = None
        self._hopsfs_connector_type = None
        self._s3_connector_type = None
        self._cached_featuregroup_dto_type = None
        self._on_demand_featuregroup_dto_type = None
        self._hopsfs_training_dataset_type = None
        self._external_training_dataset_type = None
        self._hopsfs_training_dataset_dto_type = None
        self._external_training_dataset_dto_type = None
        self._training_dataset_description_max_length = None
        self._s3_connector_dto_type = None
        self._jdbc_connector_dto_type = None
        self._hopsfs_connector_dto_type = None
        self._featuregroup_type = None
        self._training_dataset_type = None
        self._suggested_hive_feature_types = None
        self._featurestore_util4j_main_class = None
        self._featurestore_util4j_args_dataset = None
        self._featurestore_util_python_main_class = None
        self._featurestore_util4j_executable = None
        self._featurestore_util_python_executable = None
        self._s3_bucket_training_datasets_folder = None
        self._feature_import_connectors = None
        self._online_featurestore_enabled = None
        self._suggested_mysql_feature_types = None
        self.discriminator = None
        if featurestore_statistics_max_correlations is not None:
            self.featurestore_statistics_max_correlations = featurestore_statistics_max_correlations
        if featurestore_regex is not None:
            self.featurestore_regex = featurestore_regex
        if storage_connector_name_max_length is not None:
            self.storage_connector_name_max_length = storage_connector_name_max_length
        if storage_connector_description_max_length is not None:
            self.storage_connector_description_max_length = storage_connector_description_max_length
        if jdbc_storage_connector_connectionstring_max_length is not None:
            self.jdbc_storage_connector_connectionstring_max_length = jdbc_storage_connector_connectionstring_max_length
        if jdbc_storage_connector_arguments_max_length is not None:
            self.jdbc_storage_connector_arguments_max_length = jdbc_storage_connector_arguments_max_length
        if s3_storage_connector_bucket_max_length is not None:
            self.s3_storage_connector_bucket_max_length = s3_storage_connector_bucket_max_length
        if s3_storage_connector_accesskey_max_length is not None:
            self.s3_storage_connector_accesskey_max_length = s3_storage_connector_accesskey_max_length
        if s3_storage_connector_secretkey_max_length is not None:
            self.s3_storage_connector_secretkey_max_length = s3_storage_connector_secretkey_max_length
        if s3_iam_role is not None:
            self.s3_iam_role = s3_iam_role
        if cached_featuregroup_name_max_length is not None:
            self.cached_featuregroup_name_max_length = cached_featuregroup_name_max_length
        if cached_featuregroup_description_max_length is not None:
            self.cached_featuregroup_description_max_length = cached_featuregroup_description_max_length
        if cached_featuregroup_feature_name_max_length is not None:
            self.cached_featuregroup_feature_name_max_length = cached_featuregroup_feature_name_max_length
        if cached_featuregroup_feature_description_max_length is not None:
            self.cached_featuregroup_feature_description_max_length = cached_featuregroup_feature_description_max_length
        if on_demand_featuregroup_name_max_length is not None:
            self.on_demand_featuregroup_name_max_length = on_demand_featuregroup_name_max_length
        if on_demand_featuregroup_description_max_length is not None:
            self.on_demand_featuregroup_description_max_length = on_demand_featuregroup_description_max_length
        if on_demand_featuregroup_feature_name_max_length is not None:
            self.on_demand_featuregroup_feature_name_max_length = on_demand_featuregroup_feature_name_max_length
        if on_demand_featuregroup_feature_description_max_length is not None:
            self.on_demand_featuregroup_feature_description_max_length = on_demand_featuregroup_feature_description_max_length
        if on_demand_featuregroup_sql_query_max_length is not None:
            self.on_demand_featuregroup_sql_query_max_length = on_demand_featuregroup_sql_query_max_length
        if training_dataset_data_formats is not None:
            self.training_dataset_data_formats = training_dataset_data_formats
        if external_training_dataset_name_max_length is not None:
            self.external_training_dataset_name_max_length = external_training_dataset_name_max_length
        if hopsfs_training_dataset_name_max_length is not None:
            self.hopsfs_training_dataset_name_max_length = hopsfs_training_dataset_name_max_length
        if training_dataset_feature_name_max_length is not None:
            self.training_dataset_feature_name_max_length = training_dataset_feature_name_max_length
        if training_dataset_feature_description_max_length is not None:
            self.training_dataset_feature_description_max_length = training_dataset_feature_description_max_length
        if on_demand_featuregroup_type is not None:
            self.on_demand_featuregroup_type = on_demand_featuregroup_type
        if cached_featuregroup_type is not None:
            self.cached_featuregroup_type = cached_featuregroup_type
        if jdbc_connector_type is not None:
            self.jdbc_connector_type = jdbc_connector_type
        if hopsfs_connector_type is not None:
            self.hopsfs_connector_type = hopsfs_connector_type
        if s3_connector_type is not None:
            self.s3_connector_type = s3_connector_type
        if cached_featuregroup_dto_type is not None:
            self.cached_featuregroup_dto_type = cached_featuregroup_dto_type
        if on_demand_featuregroup_dto_type is not None:
            self.on_demand_featuregroup_dto_type = on_demand_featuregroup_dto_type
        if hopsfs_training_dataset_type is not None:
            self.hopsfs_training_dataset_type = hopsfs_training_dataset_type
        if external_training_dataset_type is not None:
            self.external_training_dataset_type = external_training_dataset_type
        if hopsfs_training_dataset_dto_type is not None:
            self.hopsfs_training_dataset_dto_type = hopsfs_training_dataset_dto_type
        if external_training_dataset_dto_type is not None:
            self.external_training_dataset_dto_type = external_training_dataset_dto_type
        if training_dataset_description_max_length is not None:
            self.training_dataset_description_max_length = training_dataset_description_max_length
        if s3_connector_dto_type is not None:
            self.s3_connector_dto_type = s3_connector_dto_type
        if jdbc_connector_dto_type is not None:
            self.jdbc_connector_dto_type = jdbc_connector_dto_type
        if hopsfs_connector_dto_type is not None:
            self.hopsfs_connector_dto_type = hopsfs_connector_dto_type
        if featuregroup_type is not None:
            self.featuregroup_type = featuregroup_type
        if training_dataset_type is not None:
            self.training_dataset_type = training_dataset_type
        if suggested_hive_feature_types is not None:
            self.suggested_hive_feature_types = suggested_hive_feature_types
        if featurestore_util4j_main_class is not None:
            self.featurestore_util4j_main_class = featurestore_util4j_main_class
        if featurestore_util4j_args_dataset is not None:
            self.featurestore_util4j_args_dataset = featurestore_util4j_args_dataset
        if featurestore_util_python_main_class is not None:
            self.featurestore_util_python_main_class = featurestore_util_python_main_class
        if featurestore_util4j_executable is not None:
            self.featurestore_util4j_executable = featurestore_util4j_executable
        if featurestore_util_python_executable is not None:
            self.featurestore_util_python_executable = featurestore_util_python_executable
        if s3_bucket_training_datasets_folder is not None:
            self.s3_bucket_training_datasets_folder = s3_bucket_training_datasets_folder
        if feature_import_connectors is not None:
            self.feature_import_connectors = feature_import_connectors
        if online_featurestore_enabled is not None:
            self.online_featurestore_enabled = online_featurestore_enabled
        if suggested_mysql_feature_types is not None:
            self.suggested_mysql_feature_types = suggested_mysql_feature_types

    @property
    def featurestore_statistics_max_correlations(self):
        """Gets the featurestore_statistics_max_correlations of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_statistics_max_correlations of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._featurestore_statistics_max_correlations

    @featurestore_statistics_max_correlations.setter
    def featurestore_statistics_max_correlations(self, featurestore_statistics_max_correlations):
        """Sets the featurestore_statistics_max_correlations of this FeaturestoreClientSettingsDTO.


        :param featurestore_statistics_max_correlations: The featurestore_statistics_max_correlations of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._featurestore_statistics_max_correlations = featurestore_statistics_max_correlations

    @property
    def featurestore_regex(self):
        """Gets the featurestore_regex of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_regex of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featurestore_regex

    @featurestore_regex.setter
    def featurestore_regex(self, featurestore_regex):
        """Sets the featurestore_regex of this FeaturestoreClientSettingsDTO.


        :param featurestore_regex: The featurestore_regex of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featurestore_regex = featurestore_regex

    @property
    def storage_connector_name_max_length(self):
        """Gets the storage_connector_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The storage_connector_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._storage_connector_name_max_length

    @storage_connector_name_max_length.setter
    def storage_connector_name_max_length(self, storage_connector_name_max_length):
        """Sets the storage_connector_name_max_length of this FeaturestoreClientSettingsDTO.


        :param storage_connector_name_max_length: The storage_connector_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._storage_connector_name_max_length = storage_connector_name_max_length

    @property
    def storage_connector_description_max_length(self):
        """Gets the storage_connector_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The storage_connector_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._storage_connector_description_max_length

    @storage_connector_description_max_length.setter
    def storage_connector_description_max_length(self, storage_connector_description_max_length):
        """Sets the storage_connector_description_max_length of this FeaturestoreClientSettingsDTO.


        :param storage_connector_description_max_length: The storage_connector_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._storage_connector_description_max_length = storage_connector_description_max_length

    @property
    def jdbc_storage_connector_connectionstring_max_length(self):
        """Gets the jdbc_storage_connector_connectionstring_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The jdbc_storage_connector_connectionstring_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._jdbc_storage_connector_connectionstring_max_length

    @jdbc_storage_connector_connectionstring_max_length.setter
    def jdbc_storage_connector_connectionstring_max_length(self, jdbc_storage_connector_connectionstring_max_length):
        """Sets the jdbc_storage_connector_connectionstring_max_length of this FeaturestoreClientSettingsDTO.


        :param jdbc_storage_connector_connectionstring_max_length: The jdbc_storage_connector_connectionstring_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._jdbc_storage_connector_connectionstring_max_length = jdbc_storage_connector_connectionstring_max_length

    @property
    def jdbc_storage_connector_arguments_max_length(self):
        """Gets the jdbc_storage_connector_arguments_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The jdbc_storage_connector_arguments_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._jdbc_storage_connector_arguments_max_length

    @jdbc_storage_connector_arguments_max_length.setter
    def jdbc_storage_connector_arguments_max_length(self, jdbc_storage_connector_arguments_max_length):
        """Sets the jdbc_storage_connector_arguments_max_length of this FeaturestoreClientSettingsDTO.


        :param jdbc_storage_connector_arguments_max_length: The jdbc_storage_connector_arguments_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._jdbc_storage_connector_arguments_max_length = jdbc_storage_connector_arguments_max_length

    @property
    def s3_storage_connector_bucket_max_length(self):
        """Gets the s3_storage_connector_bucket_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_storage_connector_bucket_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._s3_storage_connector_bucket_max_length

    @s3_storage_connector_bucket_max_length.setter
    def s3_storage_connector_bucket_max_length(self, s3_storage_connector_bucket_max_length):
        """Sets the s3_storage_connector_bucket_max_length of this FeaturestoreClientSettingsDTO.


        :param s3_storage_connector_bucket_max_length: The s3_storage_connector_bucket_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._s3_storage_connector_bucket_max_length = s3_storage_connector_bucket_max_length

    @property
    def s3_storage_connector_accesskey_max_length(self):
        """Gets the s3_storage_connector_accesskey_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_storage_connector_accesskey_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._s3_storage_connector_accesskey_max_length

    @s3_storage_connector_accesskey_max_length.setter
    def s3_storage_connector_accesskey_max_length(self, s3_storage_connector_accesskey_max_length):
        """Sets the s3_storage_connector_accesskey_max_length of this FeaturestoreClientSettingsDTO.


        :param s3_storage_connector_accesskey_max_length: The s3_storage_connector_accesskey_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._s3_storage_connector_accesskey_max_length = s3_storage_connector_accesskey_max_length

    @property
    def s3_storage_connector_secretkey_max_length(self):
        """Gets the s3_storage_connector_secretkey_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_storage_connector_secretkey_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._s3_storage_connector_secretkey_max_length

    @s3_storage_connector_secretkey_max_length.setter
    def s3_storage_connector_secretkey_max_length(self, s3_storage_connector_secretkey_max_length):
        """Sets the s3_storage_connector_secretkey_max_length of this FeaturestoreClientSettingsDTO.


        :param s3_storage_connector_secretkey_max_length: The s3_storage_connector_secretkey_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._s3_storage_connector_secretkey_max_length = s3_storage_connector_secretkey_max_length

    @property
    def s3_iam_role(self):
        """Gets the s3_iam_role of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_iam_role of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: bool
        """
        return self._s3_iam_role

    @s3_iam_role.setter
    def s3_iam_role(self, s3_iam_role):
        """Sets the s3_iam_role of this FeaturestoreClientSettingsDTO.


        :param s3_iam_role: The s3_iam_role of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: bool
        """

        self._s3_iam_role = s3_iam_role

    @property
    def cached_featuregroup_name_max_length(self):
        """Gets the cached_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The cached_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._cached_featuregroup_name_max_length

    @cached_featuregroup_name_max_length.setter
    def cached_featuregroup_name_max_length(self, cached_featuregroup_name_max_length):
        """Sets the cached_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.


        :param cached_featuregroup_name_max_length: The cached_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._cached_featuregroup_name_max_length = cached_featuregroup_name_max_length

    @property
    def cached_featuregroup_description_max_length(self):
        """Gets the cached_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The cached_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._cached_featuregroup_description_max_length

    @cached_featuregroup_description_max_length.setter
    def cached_featuregroup_description_max_length(self, cached_featuregroup_description_max_length):
        """Sets the cached_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.


        :param cached_featuregroup_description_max_length: The cached_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._cached_featuregroup_description_max_length = cached_featuregroup_description_max_length

    @property
    def cached_featuregroup_feature_name_max_length(self):
        """Gets the cached_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The cached_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._cached_featuregroup_feature_name_max_length

    @cached_featuregroup_feature_name_max_length.setter
    def cached_featuregroup_feature_name_max_length(self, cached_featuregroup_feature_name_max_length):
        """Sets the cached_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.


        :param cached_featuregroup_feature_name_max_length: The cached_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._cached_featuregroup_feature_name_max_length = cached_featuregroup_feature_name_max_length

    @property
    def cached_featuregroup_feature_description_max_length(self):
        """Gets the cached_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The cached_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._cached_featuregroup_feature_description_max_length

    @cached_featuregroup_feature_description_max_length.setter
    def cached_featuregroup_feature_description_max_length(self, cached_featuregroup_feature_description_max_length):
        """Sets the cached_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.


        :param cached_featuregroup_feature_description_max_length: The cached_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._cached_featuregroup_feature_description_max_length = cached_featuregroup_feature_description_max_length

    @property
    def on_demand_featuregroup_name_max_length(self):
        """Gets the on_demand_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._on_demand_featuregroup_name_max_length

    @on_demand_featuregroup_name_max_length.setter
    def on_demand_featuregroup_name_max_length(self, on_demand_featuregroup_name_max_length):
        """Sets the on_demand_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_name_max_length: The on_demand_featuregroup_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._on_demand_featuregroup_name_max_length = on_demand_featuregroup_name_max_length

    @property
    def on_demand_featuregroup_description_max_length(self):
        """Gets the on_demand_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._on_demand_featuregroup_description_max_length

    @on_demand_featuregroup_description_max_length.setter
    def on_demand_featuregroup_description_max_length(self, on_demand_featuregroup_description_max_length):
        """Sets the on_demand_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_description_max_length: The on_demand_featuregroup_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._on_demand_featuregroup_description_max_length = on_demand_featuregroup_description_max_length

    @property
    def on_demand_featuregroup_feature_name_max_length(self):
        """Gets the on_demand_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._on_demand_featuregroup_feature_name_max_length

    @on_demand_featuregroup_feature_name_max_length.setter
    def on_demand_featuregroup_feature_name_max_length(self, on_demand_featuregroup_feature_name_max_length):
        """Sets the on_demand_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_feature_name_max_length: The on_demand_featuregroup_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._on_demand_featuregroup_feature_name_max_length = on_demand_featuregroup_feature_name_max_length

    @property
    def on_demand_featuregroup_feature_description_max_length(self):
        """Gets the on_demand_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._on_demand_featuregroup_feature_description_max_length

    @on_demand_featuregroup_feature_description_max_length.setter
    def on_demand_featuregroup_feature_description_max_length(self, on_demand_featuregroup_feature_description_max_length):
        """Sets the on_demand_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_feature_description_max_length: The on_demand_featuregroup_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._on_demand_featuregroup_feature_description_max_length = on_demand_featuregroup_feature_description_max_length

    @property
    def on_demand_featuregroup_sql_query_max_length(self):
        """Gets the on_demand_featuregroup_sql_query_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_sql_query_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._on_demand_featuregroup_sql_query_max_length

    @on_demand_featuregroup_sql_query_max_length.setter
    def on_demand_featuregroup_sql_query_max_length(self, on_demand_featuregroup_sql_query_max_length):
        """Sets the on_demand_featuregroup_sql_query_max_length of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_sql_query_max_length: The on_demand_featuregroup_sql_query_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._on_demand_featuregroup_sql_query_max_length = on_demand_featuregroup_sql_query_max_length

    @property
    def training_dataset_data_formats(self):
        """Gets the training_dataset_data_formats of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The training_dataset_data_formats of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: list[str]
        """
        return self._training_dataset_data_formats

    @training_dataset_data_formats.setter
    def training_dataset_data_formats(self, training_dataset_data_formats):
        """Sets the training_dataset_data_formats of this FeaturestoreClientSettingsDTO.


        :param training_dataset_data_formats: The training_dataset_data_formats of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: list[str]
        """

        self._training_dataset_data_formats = training_dataset_data_formats

    @property
    def external_training_dataset_name_max_length(self):
        """Gets the external_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The external_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._external_training_dataset_name_max_length

    @external_training_dataset_name_max_length.setter
    def external_training_dataset_name_max_length(self, external_training_dataset_name_max_length):
        """Sets the external_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.


        :param external_training_dataset_name_max_length: The external_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._external_training_dataset_name_max_length = external_training_dataset_name_max_length

    @property
    def hopsfs_training_dataset_name_max_length(self):
        """Gets the hopsfs_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The hopsfs_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._hopsfs_training_dataset_name_max_length

    @hopsfs_training_dataset_name_max_length.setter
    def hopsfs_training_dataset_name_max_length(self, hopsfs_training_dataset_name_max_length):
        """Sets the hopsfs_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.


        :param hopsfs_training_dataset_name_max_length: The hopsfs_training_dataset_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._hopsfs_training_dataset_name_max_length = hopsfs_training_dataset_name_max_length

    @property
    def training_dataset_feature_name_max_length(self):
        """Gets the training_dataset_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The training_dataset_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._training_dataset_feature_name_max_length

    @training_dataset_feature_name_max_length.setter
    def training_dataset_feature_name_max_length(self, training_dataset_feature_name_max_length):
        """Sets the training_dataset_feature_name_max_length of this FeaturestoreClientSettingsDTO.


        :param training_dataset_feature_name_max_length: The training_dataset_feature_name_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._training_dataset_feature_name_max_length = training_dataset_feature_name_max_length

    @property
    def training_dataset_feature_description_max_length(self):
        """Gets the training_dataset_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The training_dataset_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._training_dataset_feature_description_max_length

    @training_dataset_feature_description_max_length.setter
    def training_dataset_feature_description_max_length(self, training_dataset_feature_description_max_length):
        """Sets the training_dataset_feature_description_max_length of this FeaturestoreClientSettingsDTO.


        :param training_dataset_feature_description_max_length: The training_dataset_feature_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._training_dataset_feature_description_max_length = training_dataset_feature_description_max_length

    @property
    def on_demand_featuregroup_type(self):
        """Gets the on_demand_featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._on_demand_featuregroup_type

    @on_demand_featuregroup_type.setter
    def on_demand_featuregroup_type(self, on_demand_featuregroup_type):
        """Sets the on_demand_featuregroup_type of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_type: The on_demand_featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._on_demand_featuregroup_type = on_demand_featuregroup_type

    @property
    def cached_featuregroup_type(self):
        """Gets the cached_featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The cached_featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._cached_featuregroup_type

    @cached_featuregroup_type.setter
    def cached_featuregroup_type(self, cached_featuregroup_type):
        """Sets the cached_featuregroup_type of this FeaturestoreClientSettingsDTO.


        :param cached_featuregroup_type: The cached_featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._cached_featuregroup_type = cached_featuregroup_type

    @property
    def jdbc_connector_type(self):
        """Gets the jdbc_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The jdbc_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._jdbc_connector_type

    @jdbc_connector_type.setter
    def jdbc_connector_type(self, jdbc_connector_type):
        """Sets the jdbc_connector_type of this FeaturestoreClientSettingsDTO.


        :param jdbc_connector_type: The jdbc_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._jdbc_connector_type = jdbc_connector_type

    @property
    def hopsfs_connector_type(self):
        """Gets the hopsfs_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The hopsfs_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._hopsfs_connector_type

    @hopsfs_connector_type.setter
    def hopsfs_connector_type(self, hopsfs_connector_type):
        """Sets the hopsfs_connector_type of this FeaturestoreClientSettingsDTO.


        :param hopsfs_connector_type: The hopsfs_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._hopsfs_connector_type = hopsfs_connector_type

    @property
    def s3_connector_type(self):
        """Gets the s3_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._s3_connector_type

    @s3_connector_type.setter
    def s3_connector_type(self, s3_connector_type):
        """Sets the s3_connector_type of this FeaturestoreClientSettingsDTO.


        :param s3_connector_type: The s3_connector_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._s3_connector_type = s3_connector_type

    @property
    def cached_featuregroup_dto_type(self):
        """Gets the cached_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The cached_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._cached_featuregroup_dto_type

    @cached_featuregroup_dto_type.setter
    def cached_featuregroup_dto_type(self, cached_featuregroup_dto_type):
        """Sets the cached_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.


        :param cached_featuregroup_dto_type: The cached_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._cached_featuregroup_dto_type = cached_featuregroup_dto_type

    @property
    def on_demand_featuregroup_dto_type(self):
        """Gets the on_demand_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The on_demand_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._on_demand_featuregroup_dto_type

    @on_demand_featuregroup_dto_type.setter
    def on_demand_featuregroup_dto_type(self, on_demand_featuregroup_dto_type):
        """Sets the on_demand_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.


        :param on_demand_featuregroup_dto_type: The on_demand_featuregroup_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._on_demand_featuregroup_dto_type = on_demand_featuregroup_dto_type

    @property
    def hopsfs_training_dataset_type(self):
        """Gets the hopsfs_training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The hopsfs_training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._hopsfs_training_dataset_type

    @hopsfs_training_dataset_type.setter
    def hopsfs_training_dataset_type(self, hopsfs_training_dataset_type):
        """Sets the hopsfs_training_dataset_type of this FeaturestoreClientSettingsDTO.


        :param hopsfs_training_dataset_type: The hopsfs_training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._hopsfs_training_dataset_type = hopsfs_training_dataset_type

    @property
    def external_training_dataset_type(self):
        """Gets the external_training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The external_training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._external_training_dataset_type

    @external_training_dataset_type.setter
    def external_training_dataset_type(self, external_training_dataset_type):
        """Sets the external_training_dataset_type of this FeaturestoreClientSettingsDTO.


        :param external_training_dataset_type: The external_training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._external_training_dataset_type = external_training_dataset_type

    @property
    def hopsfs_training_dataset_dto_type(self):
        """Gets the hopsfs_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The hopsfs_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._hopsfs_training_dataset_dto_type

    @hopsfs_training_dataset_dto_type.setter
    def hopsfs_training_dataset_dto_type(self, hopsfs_training_dataset_dto_type):
        """Sets the hopsfs_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.


        :param hopsfs_training_dataset_dto_type: The hopsfs_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._hopsfs_training_dataset_dto_type = hopsfs_training_dataset_dto_type

    @property
    def external_training_dataset_dto_type(self):
        """Gets the external_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The external_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._external_training_dataset_dto_type

    @external_training_dataset_dto_type.setter
    def external_training_dataset_dto_type(self, external_training_dataset_dto_type):
        """Sets the external_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.


        :param external_training_dataset_dto_type: The external_training_dataset_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._external_training_dataset_dto_type = external_training_dataset_dto_type

    @property
    def training_dataset_description_max_length(self):
        """Gets the training_dataset_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The training_dataset_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: int
        """
        return self._training_dataset_description_max_length

    @training_dataset_description_max_length.setter
    def training_dataset_description_max_length(self, training_dataset_description_max_length):
        """Sets the training_dataset_description_max_length of this FeaturestoreClientSettingsDTO.


        :param training_dataset_description_max_length: The training_dataset_description_max_length of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: int
        """

        self._training_dataset_description_max_length = training_dataset_description_max_length

    @property
    def s3_connector_dto_type(self):
        """Gets the s3_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._s3_connector_dto_type

    @s3_connector_dto_type.setter
    def s3_connector_dto_type(self, s3_connector_dto_type):
        """Sets the s3_connector_dto_type of this FeaturestoreClientSettingsDTO.


        :param s3_connector_dto_type: The s3_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._s3_connector_dto_type = s3_connector_dto_type

    @property
    def jdbc_connector_dto_type(self):
        """Gets the jdbc_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The jdbc_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._jdbc_connector_dto_type

    @jdbc_connector_dto_type.setter
    def jdbc_connector_dto_type(self, jdbc_connector_dto_type):
        """Sets the jdbc_connector_dto_type of this FeaturestoreClientSettingsDTO.


        :param jdbc_connector_dto_type: The jdbc_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._jdbc_connector_dto_type = jdbc_connector_dto_type

    @property
    def hopsfs_connector_dto_type(self):
        """Gets the hopsfs_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The hopsfs_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._hopsfs_connector_dto_type

    @hopsfs_connector_dto_type.setter
    def hopsfs_connector_dto_type(self, hopsfs_connector_dto_type):
        """Sets the hopsfs_connector_dto_type of this FeaturestoreClientSettingsDTO.


        :param hopsfs_connector_dto_type: The hopsfs_connector_dto_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._hopsfs_connector_dto_type = hopsfs_connector_dto_type

    @property
    def featuregroup_type(self):
        """Gets the featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featuregroup_type

    @featuregroup_type.setter
    def featuregroup_type(self, featuregroup_type):
        """Sets the featuregroup_type of this FeaturestoreClientSettingsDTO.


        :param featuregroup_type: The featuregroup_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featuregroup_type = featuregroup_type

    @property
    def training_dataset_type(self):
        """Gets the training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._training_dataset_type

    @training_dataset_type.setter
    def training_dataset_type(self, training_dataset_type):
        """Sets the training_dataset_type of this FeaturestoreClientSettingsDTO.


        :param training_dataset_type: The training_dataset_type of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._training_dataset_type = training_dataset_type

    @property
    def suggested_hive_feature_types(self):
        """Gets the suggested_hive_feature_types of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The suggested_hive_feature_types of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: list[str]
        """
        return self._suggested_hive_feature_types

    @suggested_hive_feature_types.setter
    def suggested_hive_feature_types(self, suggested_hive_feature_types):
        """Sets the suggested_hive_feature_types of this FeaturestoreClientSettingsDTO.


        :param suggested_hive_feature_types: The suggested_hive_feature_types of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: list[str]
        """

        self._suggested_hive_feature_types = suggested_hive_feature_types

    @property
    def featurestore_util4j_main_class(self):
        """Gets the featurestore_util4j_main_class of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_util4j_main_class of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featurestore_util4j_main_class

    @featurestore_util4j_main_class.setter
    def featurestore_util4j_main_class(self, featurestore_util4j_main_class):
        """Sets the featurestore_util4j_main_class of this FeaturestoreClientSettingsDTO.


        :param featurestore_util4j_main_class: The featurestore_util4j_main_class of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featurestore_util4j_main_class = featurestore_util4j_main_class

    @property
    def featurestore_util4j_args_dataset(self):
        """Gets the featurestore_util4j_args_dataset of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_util4j_args_dataset of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featurestore_util4j_args_dataset

    @featurestore_util4j_args_dataset.setter
    def featurestore_util4j_args_dataset(self, featurestore_util4j_args_dataset):
        """Sets the featurestore_util4j_args_dataset of this FeaturestoreClientSettingsDTO.


        :param featurestore_util4j_args_dataset: The featurestore_util4j_args_dataset of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featurestore_util4j_args_dataset = featurestore_util4j_args_dataset

    @property
    def featurestore_util_python_main_class(self):
        """Gets the featurestore_util_python_main_class of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_util_python_main_class of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featurestore_util_python_main_class

    @featurestore_util_python_main_class.setter
    def featurestore_util_python_main_class(self, featurestore_util_python_main_class):
        """Sets the featurestore_util_python_main_class of this FeaturestoreClientSettingsDTO.


        :param featurestore_util_python_main_class: The featurestore_util_python_main_class of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featurestore_util_python_main_class = featurestore_util_python_main_class

    @property
    def featurestore_util4j_executable(self):
        """Gets the featurestore_util4j_executable of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_util4j_executable of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featurestore_util4j_executable

    @featurestore_util4j_executable.setter
    def featurestore_util4j_executable(self, featurestore_util4j_executable):
        """Sets the featurestore_util4j_executable of this FeaturestoreClientSettingsDTO.


        :param featurestore_util4j_executable: The featurestore_util4j_executable of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featurestore_util4j_executable = featurestore_util4j_executable

    @property
    def featurestore_util_python_executable(self):
        """Gets the featurestore_util_python_executable of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The featurestore_util_python_executable of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._featurestore_util_python_executable

    @featurestore_util_python_executable.setter
    def featurestore_util_python_executable(self, featurestore_util_python_executable):
        """Sets the featurestore_util_python_executable of this FeaturestoreClientSettingsDTO.


        :param featurestore_util_python_executable: The featurestore_util_python_executable of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._featurestore_util_python_executable = featurestore_util_python_executable

    @property
    def s3_bucket_training_datasets_folder(self):
        """Gets the s3_bucket_training_datasets_folder of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The s3_bucket_training_datasets_folder of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: str
        """
        return self._s3_bucket_training_datasets_folder

    @s3_bucket_training_datasets_folder.setter
    def s3_bucket_training_datasets_folder(self, s3_bucket_training_datasets_folder):
        """Sets the s3_bucket_training_datasets_folder of this FeaturestoreClientSettingsDTO.


        :param s3_bucket_training_datasets_folder: The s3_bucket_training_datasets_folder of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: str
        """

        self._s3_bucket_training_datasets_folder = s3_bucket_training_datasets_folder

    @property
    def feature_import_connectors(self):
        """Gets the feature_import_connectors of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The feature_import_connectors of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: list[str]
        """
        return self._feature_import_connectors

    @feature_import_connectors.setter
    def feature_import_connectors(self, feature_import_connectors):
        """Sets the feature_import_connectors of this FeaturestoreClientSettingsDTO.


        :param feature_import_connectors: The feature_import_connectors of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: list[str]
        """

        self._feature_import_connectors = feature_import_connectors

    @property
    def online_featurestore_enabled(self):
        """Gets the online_featurestore_enabled of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The online_featurestore_enabled of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: bool
        """
        return self._online_featurestore_enabled

    @online_featurestore_enabled.setter
    def online_featurestore_enabled(self, online_featurestore_enabled):
        """Sets the online_featurestore_enabled of this FeaturestoreClientSettingsDTO.


        :param online_featurestore_enabled: The online_featurestore_enabled of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: bool
        """

        self._online_featurestore_enabled = online_featurestore_enabled

    @property
    def suggested_mysql_feature_types(self):
        """Gets the suggested_mysql_feature_types of this FeaturestoreClientSettingsDTO.  # noqa: E501


        :return: The suggested_mysql_feature_types of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :rtype: list[str]
        """
        return self._suggested_mysql_feature_types

    @suggested_mysql_feature_types.setter
    def suggested_mysql_feature_types(self, suggested_mysql_feature_types):
        """Sets the suggested_mysql_feature_types of this FeaturestoreClientSettingsDTO.


        :param suggested_mysql_feature_types: The suggested_mysql_feature_types of this FeaturestoreClientSettingsDTO.  # noqa: E501
        :type: list[str]
        """

        self._suggested_mysql_feature_types = suggested_mysql_feature_types

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FeaturestoreClientSettingsDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FeaturestoreClientSettingsDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
