# coding: utf-8

"""
    Hopsworks api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.1.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.admin_api import AdminApi  # noqa: E501
from swagger_client.rest import ApiException


class TestAdminApi(unittest.TestCase):
    """AdminApi unit test stubs"""

    def setUp(self):
        self.api = api.admin_api.AdminApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_accept_user(self):
        """Test case for accept_user

        """
        pass

    def test_add_new_cluster_node(self):
        """Test case for add_new_cluster_node

        """
        pass

    def test_change_cluster_status(self):
        """Test case for change_cluster_status

        """
        pass

    def test_change_master_encryption_password(self):
        """Test case for change_master_encryption_password

        """
        pass

    def test_cluster_status(self):
        """Test case for cluster_status

        """
        pass

    def test_create_project_as_user(self):
        """Test case for create_project_as_user

        """
        pass

    def test_delete_node(self):
        """Test case for delete_node

        """
        pass

    def test_delete_project(self):
        """Test case for delete_project

        """
        pass

    def test_force_delete_project(self):
        """Test case for force_delete_project

        """
        pass

    def test_get_all_cluster_nodes(self):
        """Test case for get_all_cluster_nodes

        """
        pass

    def test_get_all_groups(self):
        """Test case for get_all_groups

        """
        pass

    def test_get_all_users(self):
        """Test case for get_all_users

        """
        pass

    def test_get_kafka_settings(self):
        """Test case for get_kafka_settings

        Get kafka system settings  # noqa: E501
        """
        pass

    def test_get_materializer_state(self):
        """Test case for get_materializer_state

        """
        pass

    def test_get_project_admin_info(self):
        """Test case for get_project_admin_info

        """
        pass

    def test_get_projects_admin_info(self):
        """Test case for get_projects_admin_info

        """
        pass

    def test_get_update_password_status(self):
        """Test case for get_update_password_status

        """
        pass

    def test_get_user(self):
        """Test case for get_user

        """
        pass

    def test_pending_user(self):
        """Test case for pending_user

        """
        pass

    def test_refresh_variables(self):
        """Test case for refresh_variables

        """
        pass

    def test_reject_user(self):
        """Test case for reject_user

        """
        pass

    def test_remove_local_materialized_crypto(self):
        """Test case for remove_local_materialized_crypto

        """
        pass

    def test_remove_remote_materialized_crypto(self):
        """Test case for remove_remote_materialized_crypto

        """
        pass

    def test_renew_service_jwt(self):
        """Test case for renew_service_jwt

        """
        pass

    def test_restart_agent(self):
        """Test case for restart_agent

        """
        pass

    def test_service_key_rotate(self):
        """Test case for service_key_rotate

        """
        pass

    def test_set_project_admin_info(self):
        """Test case for set_project_admin_info

        """
        pass

    def test_start_agent(self):
        """Test case for start_agent

        """
        pass

    def test_stop_agent(self):
        """Test case for stop_agent

        """
        pass

    def test_update_cluster_node(self):
        """Test case for update_cluster_node

        """
        pass

    def test_update_user(self):
        """Test case for update_user

        """
        pass

    def test_update_variables(self):
        """Test case for update_variables

        """
        pass


if __name__ == '__main__':
    unittest.main()
